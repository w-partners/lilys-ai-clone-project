import React from 'react';
import {\n  Box,\n  Typography,\n  Button,\n  Container,\n  Paper,\n  Alert,\n  AlertTitle,\n} from '@mui/material';\nimport {\n  Refresh as RefreshIcon,\n  Home as HomeIcon,\n  BugReport as BugReportIcon,\n} from '@mui/icons-material';\nimport { motion } from 'framer-motion';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Error Boundary caught an error:', error, errorInfo);\n    \n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n  }\n\n  handleRefresh = () => {\n    window.location.reload();\n  };\n\n  handleGoHome = () => {\n    window.location.href = '/';\n  };\n\n  handleReportBug = () => {\n    const errorDetails = {\n      error: this.state.error?.toString(),\n      stack: this.state.error?.stack,\n      componentStack: this.state.errorInfo?.componentStack,\n      userAgent: navigator.userAgent,\n      timestamp: new Date().toISOString(),\n      url: window.location.href,\n    };\n\n    const bugReportData = {\n      title: `Application Error: ${this.state.error?.message || 'Unknown Error'}`,\n      body: `**Error Details:**\\n\\`\\`\\`\\n${JSON.stringify(errorDetails, null, 2)}\\n\\`\\`\\``,\n    };\n\n    navigator.clipboard.writeText(JSON.stringify(bugReportData, null, 2))\n      .then(() => alert('Error details copied to clipboard'))\n      .catch(() => console.log('Could not copy error details'));\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Box\n          sx={{\n            minHeight: '100vh',\n            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            p: 2,\n          }}\n        >\n          <Container maxWidth=\"md\">\n            <motion.div\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5 }}\n            >\n              <Paper\n                elevation={8}\n                sx={{\n                  p: 4,\n                  textAlign: 'center',\n                  borderRadius: 3,\n                  background: 'rgba(255, 255, 255, 0.95)',\n                  backdropFilter: 'blur(10px)',\n                }}\n              >\n                <Box\n                  sx={{\n                    width: 80,\n                    height: 80,\n                    borderRadius: '50%',\n                    bgcolor: 'error.main',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    mx: 'auto',\n                    mb: 3,\n                  }}\n                >\n                  <BugReportIcon sx={{ fontSize: 40, color: 'white' }} />\n                </Box>\n\n                <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 600 }}>\n                  Oops! Something went wrong\n                </Typography>\n                \n                <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                  We're sorry for the inconvenience. An unexpected error has occurred.\n                </Typography>\n\n                {process.env.NODE_ENV === 'development' && (\n                  <Alert severity=\"error\" sx={{ mb: 3, textAlign: 'left' }}>\n                    <AlertTitle>Error Details (Development Mode)</AlertTitle>\n                    <Typography variant=\"body2\" component=\"pre\" sx={{ mt: 1, fontSize: '0.75rem' }}>\n                      {this.state.error?.toString()}\n                    </Typography>\n                  </Alert>\n                )}\n\n                <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', flexWrap: 'wrap' }}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={this.handleRefresh}\n                    startIcon={<RefreshIcon />}\n                    sx={{ minWidth: 140 }}\n                  >\n                    Refresh Page\n                  </Button>\n                  \n                  <Button\n                    variant=\"outlined\"\n                    onClick={this.handleGoHome}\n                    startIcon={<HomeIcon />}\n                    sx={{ minWidth: 140 }}\n                  >\n                    Go Home\n                  </Button>\n                  \n                  <Button\n                    variant=\"text\"\n                    onClick={this.handleReportBug}\n                    startIcon={<BugReportIcon />}\n                    size=\"small\"\n                  >\n                    Report Bug\n                  </Button>\n                </Box>\n\n                <Box sx={{ mt: 4, p: 2, bgcolor: 'grey.100', borderRadius: 2 }}>\n                  <Typography variant=\"h6\" gutterBottom>\n                    What you can do:\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'left' }}>\n                    • Try refreshing the page<br />\n                    • Clear your browser cache<br />\n                    • Check your internet connection<br />\n                    • Contact support if the problem persists\n                  </Typography>\n                </Box>\n              </Paper>\n            </motion.div>\n          </Container>\n        </Box>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;