{"version":3,"file":"static/js/390.8420d879.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","pages/Register.js","../node_modules/@mui/icons-material/esm/Email.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import React, { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Link,\n  Alert,\n  InputAdornment,\n  IconButton,\n  CircularProgress,\n  Checkbox,\n  FormControlLabel\n} from '@mui/material';\nimport {\n  Visibility,\n  VisibilityOff,\n  Email as EmailIcon,\n  Phone as PhoneIcon,\n  Lock as LockIcon,\n  Person as PersonIcon\n} from '@mui/icons-material';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\n\nconst Register = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { register: authRegister } = useAuth();\n  const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setError,\n    watch\n  } = useForm({\n    defaultValues: {\n      name: '',\n      phone: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      agreeToTerms: false\n    }\n  });\n\n  const password = watch('password');\n\n  const onSubmit = async (data) => {\n    setIsLoading(true);\n    try {\n      await authRegister({\n        name: data.name,\n        phone: data.phone,\n        email: data.email,\n        password: data.password\n      });\n      toast.success('Registration successful! Welcome to Lilys AI!');\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Registration error:', error);\n      \n      if (error.message.includes('phone number already exists')) {\n        setError('phone', {\n          message: 'This phone number is already registered'\n        });\n      } else if (error.message.includes('email already exists')) {\n        setError('email', {\n          message: 'This email is already registered'\n        });\n      } else {\n        setError('root', {\n          message: 'Failed to register. Please try again.'\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          minHeight: '100vh',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          py: 3\n        }}\n      >\n        <Paper elevation={3} sx={{ p: 4, width: '100%' }}>\n          <Box sx={{ textAlign: 'center', mb: 3 }}>\n            <Typography component=\"h1\" variant=\"h4\" gutterBottom>\n              Create Account\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Join Lilys AI to start summarizing content\n            </Typography>\n          </Box>\n\n          {errors.root && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {errors.root.message}\n            </Alert>\n          )}\n\n          <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Full Name\"\n              autoComplete=\"name\"\n              autoFocus\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PersonIcon color=\"action\" />\n                  </InputAdornment>\n                )\n              }}\n              error={!!errors.name}\n              helperText={errors.name?.message}\n              {...register('name', {\n                required: 'Name is required',\n                minLength: {\n                  value: 2,\n                  message: 'Name must be at least 2 characters'\n                }\n              })}\n            />\n\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"phone\"\n              label=\"Phone Number\"\n              autoComplete=\"tel\"\n              placeholder=\"01012345678\"\n              type=\"tel\"\n              inputProps={{\n                inputMode: 'numeric',\n                pattern: '[0-9]*'\n              }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PhoneIcon color=\"action\" />\n                  </InputAdornment>\n                )\n              }}\n              error={!!errors.phone}\n              helperText={errors.phone?.message}\n              {...register('phone', {\n                required: 'Phone number is required',\n                pattern: {\n                  value: /^01[0-9]{8,9}$/,\n                  message: 'Invalid phone number format (e.g., 01012345678)'\n                }\n              })}\n            />\n\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"email\"\n              label=\"Email Address (Optional)\"\n              autoComplete=\"email\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <EmailIcon color=\"action\" />\n                  </InputAdornment>\n                )\n              }}\n              error={!!errors.email}\n              helperText={errors.email?.message}\n              {...register('email', {\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: 'Invalid email address'\n                }\n              })}\n            />\n\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              id=\"password\"\n              autoComplete=\"new-password\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <LockIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n              error={!!errors.password}\n              helperText={errors.password?.message}\n              {...register('password', {\n                required: 'Password is required',\n                minLength: {\n                  value: 6,\n                  message: 'Password must be at least 6 characters'\n                },\n                pattern: {\n                  value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/,\n                  message: 'Password must contain uppercase, lowercase and number'\n                }\n              })}\n            />\n\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Confirm Password\"\n              type={showPassword ? 'text' : 'password'}\n              id=\"confirmPassword\"\n              autoComplete=\"new-password\"\n              error={!!errors.confirmPassword}\n              helperText={errors.confirmPassword?.message}\n              {...register('confirmPassword', {\n                required: 'Please confirm your password',\n                validate: value => value === password || 'Passwords do not match'\n              })}\n            />\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color=\"primary\"\n                  {...register('agreeToTerms', {\n                    required: 'You must agree to the terms and conditions'\n                  })}\n                />\n              }\n              label={\n                <Typography variant=\"body2\">\n                  I agree to the{' '}\n                  <Link href=\"/terms\" target=\"_blank\">\n                    Terms and Conditions\n                  </Link>\n                </Typography>\n              }\n              sx={{ mt: 1 }}\n            />\n            {errors.agreeToTerms && (\n              <Typography variant=\"caption\" color=\"error\" display=\"block\">\n                {errors.agreeToTerms.message}\n              </Typography>\n            )}\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <CircularProgress size={24} color=\"inherit\" />\n              ) : (\n                'Sign Up'\n              )}\n            </Button>\n\n            <Box sx={{ mt: 2, textAlign: 'center' }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Already have an account?{' '}\n                <Link component={RouterLink} to=\"/login\" variant=\"body2\">\n                  Sign in\n                </Link>\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Register;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');"],"names":["createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","indeterminate","capitalize","size","color","_ref","theme","_extends","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","fontSize","clsx","Register","_errors$name","_errors$phone","_errors$email","_errors$password","_errors$confirmPasswo","showPassword","setShowPassword","useState","isLoading","setIsLoading","register","authRegister","useAuth","navigate","useNavigate","handleSubmit","formState","errors","setError","watch","useForm","defaultValues","phone","email","password","confirmPassword","agreeToTerms","Container","component","maxWidth","children","Box","sx","minHeight","display","flexDirection","alignItems","justifyContent","py","_jsxs","Paper","elevation","p","width","textAlign","mb","Typography","variant","gutterBottom","Alert","severity","message","onSubmit","async","data","toast","success","error","console","includes","noValidate","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","InputProps","startAdornment","InputAdornment","position","PersonIcon","helperText","minLength","value","placeholder","inputMode","pattern","PhoneIcon","EmailIcon","LockIcon","endAdornment","IconButton","onClick","edge","VisibilityOff","Visibility","validate","FormControlLabel","control","Checkbox","Link","href","target","mt","Button","CircularProgress","RouterLink","to"],"sourceRoot":""}