{"version":3,"file":"static/js/66.d6dcbc02.chunk.js","mappings":"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","sources":["pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\nimport {\n  Container,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Link,\n  Alert,\n  InputAdornment,\n  IconButton,\n  CircularProgress\n} from '@mui/material';\nimport {\n  Visibility,\n  VisibilityOff,\n  Phone as PhoneIcon,\n  Lock as LockIcon\n} from '@mui/icons-material';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\n\nconst Login = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { login } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  \n  const from = location.state?.from?.pathname || '/dashboard';\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    setError\n  } = useForm({\n    defaultValues: {\n      phone: '',\n      password: ''\n    }\n  });\n\n  const onSubmit = async (data) => {\n    setIsLoading(true);\n    try {\n      const result = await login(data.phone, data.password);\n      if (result.success) {\n        toast.success('Welcome back!');\n        setTimeout(() => {\n          navigate(from, { replace: true });\n        }, 100);\n      } else {\n        // Handle login failure\n        if (result.error && result.error.includes('Invalid')) {\n          setError('root', {\n            message: 'Invalid phone number or password'\n          });\n        } else if (result.error && result.error.includes('deactivated')) {\n          setError('root', {\n            message: 'Your account has been deactivated'\n          });\n        } else {\n          setError('root', {\n            message: result.error || 'Failed to login. Please try again.'\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('root', {\n        message: 'An unexpected error occurred. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          minHeight: '100vh',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        <Paper elevation={3} sx={{ p: 4, width: '100%' }}>\n          <Box sx={{ textAlign: 'center', mb: 3 }}>\n            <Typography component=\"h1\" variant=\"h4\" gutterBottom>\n              Welcome Back\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Sign in to your Lilys AI account\n            </Typography>\n          </Box>\n\n          {errors.root && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {errors.root.message}\n            </Alert>\n          )}\n\n          <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"phone\"\n              label=\"Phone Number\"\n              autoComplete=\"tel\"\n              autoFocus\n              placeholder=\"01012345678\"\n              type=\"tel\"\n              inputProps={{\n                inputMode: 'numeric',\n                pattern: '[0-9]*'\n              }}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PhoneIcon color=\"action\" />\n                  </InputAdornment>\n                )\n              }}\n              error={!!errors.phone}\n              helperText={errors.phone?.message}\n              {...register('phone', {\n                required: 'Phone number is required',\n                pattern: {\n                  value: /^01[0-9]{8,9}$/,\n                  message: 'Invalid phone number format (e.g., 01012345678)'\n                }\n              })}\n            />\n\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              id=\"password\"\n              autoComplete=\"current-password\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <LockIcon color=\"action\" />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n              error={!!errors.password}\n              helperText={errors.password?.message}\n              {...register('password', {\n                required: 'Password is required',\n                minLength: {\n                  value: 6,\n                  message: 'Password must be at least 6 characters'\n                }\n              })}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <CircularProgress size={24} color=\"inherit\" />\n              ) : (\n                'Sign In'\n              )}\n            </Button>\n\n            <Box sx={{ mt: 2, textAlign: 'center' }}>\n              <Link\n                component={RouterLink}\n                to=\"/forgot-password\"\n                variant=\"body2\"\n                sx={{ display: 'block', mb: 1 }}\n              >\n                Forgot password?\n              </Link>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Don't have an account?{' '}\n                <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n                  Sign up\n                </Link>\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login;"],"names":["Login","_location$state","_location$state$from","_errors$phone","_errors$password","showPassword","setShowPassword","useState","isLoading","setIsLoading","login","useAuth","navigate","useNavigate","from","useLocation","state","pathname","register","handleSubmit","formState","errors","setError","useForm","defaultValues","phone","password","_jsx","Container","component","maxWidth","children","Box","sx","minHeight","display","flexDirection","alignItems","justifyContent","_jsxs","Paper","elevation","p","width","textAlign","mb","Typography","variant","gutterBottom","color","root","Alert","severity","message","onSubmit","async","result","data","success","toast","setTimeout","replace","error","includes","console","noValidate","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","placeholder","type","inputProps","inputMode","pattern","InputProps","startAdornment","InputAdornment","position","PhoneIcon","helperText","value","LockIcon","endAdornment","IconButton","onClick","edge","VisibilityOff","Visibility","minLength","Button","mt","disabled","CircularProgress","size","Link","RouterLink","to"],"sourceRoot":""}