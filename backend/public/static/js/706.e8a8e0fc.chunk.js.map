{"version":3,"file":"static/js/706.e8a8e0fc.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ContentPaste.js","pages/Home.js","../node_modules/@mui/icons-material/esm/Email.js","../node_modules/@mui/icons-material/esm/CheckCircle.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/Stack/Stack.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 2h-4.18C14.4.84 13.3 0 12 0c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2m-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1m7 18H5V4h2v3h10V4h2z\"\n}), 'ContentPaste');","import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Container, \n  Typography, \n  TextField, \n  Button, \n  Paper,\n  Tab,\n  Tabs,\n  CircularProgress,\n  Alert,\n  Chip,\n  Stack,\n  IconButton,\n  InputAdornment,\n  LinearProgress,\n  Tooltip,\n  Divider\n} from '@mui/material';\nimport { \n  YouTube as YouTubeIcon,\n  Send as SendIcon,\n  Email as EmailIcon,\n  ContentPaste as PasteIcon,\n  ContentCopy as CopyIcon,\n  CheckCircle as CheckCircleIcon\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport toast from 'react-hot-toast';\nimport { summaryService, systemPromptService } from '../services/api';\nimport { useWebSocket } from '../contexts/WebSocketContext';\n\nfunction Home() {\n  const navigate = useNavigate();\n  const { socket } = useWebSocket();\n  const [url, setUrl] = useState('');\n  const [email, setEmail] = useState('');\n  const [apiKey, setApiKey] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [error, setError] = useState('');\n  const [showEmailInput, setShowEmailInput] = useState(false);\n  const [jobId, setJobId] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [copied, setCopied] = useState({});\n  const [systemPrompts, setSystemPrompts] = useState([]);\n  const [systemPromptIds, setSystemPromptIds] = useState([]);\n\n  // 시스템 프롬프트 로드 (컴포넌트 마운트 시)\n  useEffect(() => {\n    const loadSystemPrompts = async () => {\n      try {\n        const response = await systemPromptService.getPublic();\n        if (response.success && response.data) {\n          const prompts = response.data.slice(0, 6); // 최대 6개만\n          setSystemPrompts(prompts.map(p => p.name));\n          setSystemPromptIds(prompts.map(p => p.id));\n        } else {\n          // 기본 프롬프트 사용\n          setSystemPrompts([\n            '핵심 요약',\n            '상세 분석', \n            '실행 가능한 인사이트',\n            '학습 포인트',\n            'Q&A 생성',\n            '비즈니스 적용'\n          ]);\n        }\n      } catch (error) {\n        console.error('시스템 프롬프트 로드 실패:', error);\n        // 기본 프롬프트 사용\n        setSystemPrompts([\n          '핵심 요약',\n          '상세 분석', \n          '실행 가능한 인사이트',\n          '학습 포인트',\n          'Q&A 생성',\n          '비즈니스 적용'\n        ]);\n      }\n    };\n\n    loadSystemPrompts();\n  }, []);\n\n  // WebSocket 이벤트 리스너 설정\n  useEffect(() => {\n    if (!socket || !jobId) return;\n\n    const handleProgress = (data) => {\n      if (data.jobId === jobId) {\n        setProgress(data.progress || 0);\n      }\n    };\n\n    const handleComplete = (data) => {\n      if (data.jobId === jobId) {\n        setLoading(false);\n        setProgress(100);\n        \n        // 결과를 6개의 프롬프트 탭으로 구성\n        const formattedResults = data.result?.summaries || [\n          { title: systemPrompts[0], content: data.result?.summary || data.result },\n          { title: systemPrompts[1], content: '처리 중...' },\n          { title: systemPrompts[2], content: '처리 중...' },\n          { title: systemPrompts[3], content: '처리 중...' },\n          { title: systemPrompts[4], content: '처리 중...' },\n          { title: systemPrompts[5], content: '처리 중...' },\n        ];\n        \n        setResults(formattedResults);\n        toast.success('요약이 완료되었습니다!');\n        \n        // 이메일 전송 처리\n        if (email && showEmailInput) {\n          sendResultsByEmail(formattedResults);\n        }\n      }\n    };\n\n    const handleError = (data) => {\n      if (data.jobId === jobId) {\n        setLoading(false);\n        setError(data.error || '처리 중 오류가 발생했습니다.');\n        toast.error('처리 중 오류가 발생했습니다.');\n      }\n    };\n\n    socket.on('job:progress', handleProgress);\n    socket.on('job:complete', handleComplete);\n    socket.on('job:error', handleError);\n\n    return () => {\n      socket.off('job:progress', handleProgress);\n      socket.off('job:complete', handleComplete);\n      socket.off('job:error', handleError);\n    };\n  }, [socket, jobId, email, showEmailInput]);\n\n  const validateYouTubeUrl = (url) => {\n    const regex = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com\\/(watch\\?v=|embed\\/)|youtu\\.be\\/)[-\\w]+(&[\\w=]*)?$/;\n    return regex.test(url);\n  };\n\n  const sendResultsByEmail = async (summaryResults) => {\n    try {\n      // 이메일 전송 API 호출 (백엔드에 구현 필요)\n      await summaryService.sendEmail({\n        email,\n        subject: `YouTube 동영상 요약: ${url}`,\n        content: summaryResults,\n      });\n      toast.success(`결과가 ${email}로 전송되었습니다.`);\n    } catch (err) {\n      console.error('Email send error:', err);\n      toast.error('이메일 전송에 실패했습니다.');\n    }\n  };\n\n  const handleCopy = (content, index) => {\n    navigator.clipboard.writeText(content);\n    setCopied({ ...copied, [index]: true });\n    toast.success('클립보드에 복사되었습니다.');\n    \n    setTimeout(() => {\n      setCopied({ ...copied, [index]: false });\n    }, 2000);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!url) {\n      setError('YouTube URL을 입력해주세요');\n      return;\n    }\n\n    if (!validateYouTubeUrl(url)) {\n      setError('올바른 YouTube URL을 입력해주세요');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setResults(null);\n    setProgress(0);\n\n    try {\n      // /process 엔드포인트를 직접 호출\n      const response = await summaryService.processContent(url, 'gemini', apiKey, email);\n      \n      if (response.success && response.results) {\n        // 백엔드에서 받은 결과를 탭 형식으로 구성\n        const formattedResults = response.results.map((result, index) => ({\n          title: result.promptName || systemPrompts[index] || `결과 ${index + 1}`,\n          content: result.content || '처리 중...'\n        }));\n        \n        setResults(formattedResults);\n        setLoading(false);\n        toast.success('요약이 완료되었습니다!');\n        \n        if (email && showEmailInput) {\n          toast.info('이메일로 전송되었습니다.');\n        }\n      } else if (response.jobId) {\n        // 백그라운드 처리의 경우\n        setJobId(response.jobId);\n        toast.success('처리를 시작했습니다. 잠시만 기다려주세요...');\n      } else {\n        throw new Error(response.error || '처리 중 문제가 발생했습니다.');\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError(err.response?.data?.error || err.response?.data?.message || '서버 연결에 실패했습니다');\n      setLoading(false);\n      toast.error('처리 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handlePaste = async () => {\n    try {\n      const text = await navigator.clipboard.readText();\n      setUrl(text);\n    } catch (err) {\n      console.error('Failed to read clipboard:', err);\n    }\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        {/* 헤더 */}\n        <Box textAlign=\"center\" mb={6}>\n          <Typography variant=\"h2\" fontWeight=\"bold\" gutterBottom>\n            Lily's AI Clone\n          </Typography>\n          <Typography variant=\"h5\" color=\"text.secondary\" gutterBottom>\n            YouTube, PDF, WebPage, Audio 어떤 자료든 완벽하게 요약\n          </Typography>\n          <Stack direction=\"row\" spacing={1} justifyContent=\"center\" mt={2}>\n            <Chip label=\"YouTube\" color=\"error\" icon={<YouTubeIcon />} />\n            <Chip label=\"무료 체험\" color=\"success\" />\n            <Chip label=\"로그인 없이 사용 가능\" color=\"info\" />\n          </Stack>\n        </Box>\n\n        {/* 입력 폼 */}\n        <Paper elevation={3} sx={{ p: 4, mb: 4 }}>\n          <form onSubmit={handleSubmit}>\n            <Box mb={3}>\n              <TextField\n                fullWidth\n                label=\"YouTube URL을 입력하세요\"\n                variant=\"outlined\"\n                value={url}\n                onChange={(e) => setUrl(e.target.value)}\n                placeholder=\"https://www.youtube.com/watch?v=...\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <YouTubeIcon color=\"error\" />\n                    </InputAdornment>\n                  ),\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton onClick={handlePaste} edge=\"end\">\n                        <PasteIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n                disabled={loading}\n              />\n            </Box>\n\n            {/* 옵션 영역 */}\n            <Box mb={3}>\n              <Stack spacing={2}>\n                <Box>\n                  <Button\n                    variant={showEmailInput ? \"contained\" : \"outlined\"}\n                    startIcon={<EmailIcon />}\n                    onClick={() => setShowEmailInput(!showEmailInput)}\n                    size=\"small\"\n                  >\n                    이메일로 결과 받기\n                  </Button>\n                </Box>\n                \n                {showEmailInput && (\n                  <TextField\n                    fullWidth\n                    label=\"이메일 주소\"\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"your@email.com\"\n                    size=\"small\"\n                    disabled={loading}\n                  />\n                )}\n\n                <TextField\n                  fullWidth\n                  label=\"API 키 (선택사항 - 없으면 기본 키 사용)\"\n                  variant=\"outlined\"\n                  value={apiKey}\n                  onChange={(e) => setApiKey(e.target.value)}\n                  placeholder=\"Gemini 또는 OpenAI API 키\"\n                  size=\"small\"\n                  disabled={loading}\n                  helperText=\"API 키가 없어도 사용 가능합니다\"\n                />\n              </Stack>\n            </Box>\n\n            {error && (\n              <Alert severity=\"error\" sx={{ mb: 2 }}>\n                {error}\n              </Alert>\n            )}\n\n            {loading && (\n              <Box sx={{ mt: 2, mb: 2 }}>\n                <LinearProgress variant=\"determinate\" value={progress} />\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                  처리 중... {progress}%\n                </Typography>\n              </Box>\n            )}\n\n            <Box display=\"flex\" gap={2}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                size=\"large\"\n                fullWidth\n                startIcon={loading ? <CircularProgress size={20} color=\"inherit\" /> : <SendIcon />}\n                disabled={loading}\n                sx={{ py: 1.5 }}\n              >\n                {loading ? '처리 중...' : '요약 시작'}\n              </Button>\n              \n              <Button\n                variant=\"outlined\"\n                size=\"large\"\n                onClick={() => navigate('/login')}\n                sx={{ py: 1.5, minWidth: 150 }}\n              >\n                로그인\n              </Button>\n            </Box>\n          </form>\n        </Paper>\n\n        {/* 결과 영역 */}\n        {results && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n          >\n            <Paper elevation={3} sx={{ p: 4 }}>\n              <Typography variant=\"h5\" gutterBottom>\n                요약 결과\n              </Typography>\n              \n              <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n                <Tabs value={activeTab} onChange={handleTabChange}>\n                  {systemPrompts.map((prompt, index) => (\n                    <Tab key={index} label={prompt} />\n                  ))}\n                </Tabs>\n              </Box>\n\n              {results.map((result, index) => (\n                <Box\n                  key={index}\n                  role=\"tabpanel\"\n                  hidden={activeTab !== index}\n                  sx={{ pt: 2 }}\n                >\n                  {activeTab === index && (\n                    <Box>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                        <Typography variant=\"h6\" color=\"primary\">\n                          {result.title || systemPrompts[index]}\n                        </Typography>\n                        <Tooltip title=\"복사\">\n                          <IconButton\n                            size=\"small\"\n                            onClick={() => handleCopy(result.content, index)}\n                            color={copied[index] ? 'success' : 'default'}\n                          >\n                            {copied[index] ? <CheckCircleIcon /> : <CopyIcon />}\n                          </IconButton>\n                        </Tooltip>\n                      </Box>\n                      <Divider sx={{ mb: 2 }} />\n                      <Typography \n                        variant=\"body1\" \n                        sx={{ \n                          whiteSpace: 'pre-wrap',\n                          lineHeight: 1.8 \n                        }}\n                      >\n                        {result.content || '처리 중...'}\n                      </Typography>\n                    </Box>\n                  )}\n                </Box>\n              ))}\n              \n              {/* 로그인 유도 */}\n              <Box mt={4} p={3} bgcolor=\"grey.100\" borderRadius={2}>\n                <Typography variant=\"body1\" gutterBottom>\n                  💡 더 많은 기능을 사용하고 싶으신가요?\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                  로그인하면 히스토리 저장, 파일 업로드, 맞춤 프롬프트 등을 사용할 수 있습니다.\n                </Typography>\n                <Button \n                  variant=\"contained\" \n                  onClick={() => navigate('/login')}\n                  sx={{ mt: 2 }}\n                >\n                  로그인하고 모든 기능 사용하기\n                </Button>\n              </Box>\n            </Paper>\n          </motion.div>\n        )}\n\n        {/* 기능 소개 */}\n        {!results && !loading && (\n          <Box mt={6}>\n            <Typography variant=\"h5\" textAlign=\"center\" gutterBottom>\n              주요 기능\n            </Typography>\n            <Stack direction={{ xs: 'column', md: 'row' }} spacing={3} mt={3}>\n              <Paper sx={{ p: 3, flex: 1, textAlign: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  🎯 6가지 분석 관점\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  핵심 요약부터 비즈니스 적용까지 다양한 관점에서 분석\n                </Typography>\n              </Paper>\n              <Paper sx={{ p: 3, flex: 1, textAlign: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  ⚡ 빠른 처리\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  최신 AI 기술로 빠르고 정확한 요약 제공\n                </Typography>\n              </Paper>\n              <Paper sx={{ p: 3, flex: 1, textAlign: 'center' }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  📧 이메일 전송\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  결과를 이메일로 받아 나중에 확인 가능\n                </Typography>\n              </Paper>\n            </Stack>\n          </Box>\n        )}\n      </motion.div>\n    </Container>\n  );\n}\n\nexport default Home;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\", \"useFlexGap\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className,\n        useFlexGap = false\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;"],"names":["createSvgIcon","_jsx","d","navigate","useNavigate","socket","useWebSocket","url","setUrl","useState","email","setEmail","apiKey","setApiKey","loading","setLoading","results","setResults","activeTab","setActiveTab","error","setError","showEmailInput","setShowEmailInput","jobId","setJobId","progress","setProgress","copied","setCopied","systemPrompts","setSystemPrompts","systemPromptIds","setSystemPromptIds","useEffect","async","response","systemPromptService","getPublic","success","data","prompts","slice","map","p","name","id","console","loadSystemPrompts","handleProgress","handleComplete","_data$result","_data$result2","formattedResults","result","summaries","title","content","summary","toast","sendResultsByEmail","handleError","on","off","summaryService","sendEmail","subject","summaryResults","err","Container","maxWidth","sx","py","children","_jsxs","motion","div","initial","opacity","y","animate","transition","duration","Box","textAlign","mb","Typography","variant","fontWeight","gutterBottom","color","Stack","direction","spacing","justifyContent","mt","Chip","label","icon","YouTubeIcon","Paper","elevation","onSubmit","e","preventDefault","test","validateYouTubeUrl","processContent","index","promptName","info","Error","_err$response","_err$response$data","_err$response2","_err$response2$data","message","TextField","fullWidth","value","onChange","target","placeholder","InputProps","startAdornment","InputAdornment","position","endAdornment","IconButton","onClick","text","navigator","clipboard","readText","edge","PasteIcon","disabled","Button","startIcon","EmailIcon","size","helperText","Alert","severity","LinearProgress","display","gap","type","CircularProgress","SendIcon","minWidth","borderBottom","borderColor","Tabs","handleTabChange","event","newValue","prompt","Tab","role","hidden","pt","alignItems","Tooltip","handleCopy","writeText","setTimeout","CheckCircleIcon","CopyIcon","Divider","whiteSpace","lineHeight","bgcolor","borderRadius","xs","md","flex","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","root","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","push","length","key","style","_ref","ownerState","theme","_extends","flexDirection","handleBreakpoints","resolveBreakpointValues","values","breakpoints","propValue","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","StackRoot","inProps","ref","themeProps","extendSxProp","component","divider","className","other","_objectWithoutPropertiesLoose","classes","composeClasses","generateUtilityClass","as","clsx","createStack","styled","useDefaultProps"],"sourceRoot":""}