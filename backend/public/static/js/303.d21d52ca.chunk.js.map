{"version":3,"file":"static/js/303.d21d52ca.chunk.js","mappings":"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","sources":["pages/Summaries.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Chip,\n  IconButton,\n  TextField,\n  InputAdornment,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Toolbar,\n  Tooltip,\n  Button,\n  Menu,\n  Checkbox,\n  ListItemText,\n  OutlinedInput\n} from '@mui/material';\nimport {\n  Search,\n  FilterList,\n  Visibility,\n  Download,\n  Delete,\n  Share,\n  MoreVert,\n  Refresh,\n  Psychology,\n  Description\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport api from '../services/api';\nimport Loading from '../components/common/Loading';\nimport toast from 'react-hot-toast';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst Summaries = () => {\n  const [summaries, setSummaries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [totalCount, setTotalCount] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filters, setFilters] = useState({\n    sourceType: [],\n    provider: [],\n    status: []\n  });\n  const [sortBy, setSortBy] = useState('createdAt');\n  const [sortOrder, setSortOrder] = useState('desc');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedSummary, setSelectedSummary] = useState(null);\n  \n  const navigate = useNavigate();\n\n  const fetchSummaries = async () => {\n    try {\n      setLoading(true);\n      const params = new URLSearchParams({\n        page: page + 1,\n        limit: rowsPerPage,\n        sortBy,\n        sortOrder\n      });\n\n      if (searchQuery) params.append('search', searchQuery);\n      if (filters.sourceType.length) params.append('sourceType', filters.sourceType.join(','));\n      if (filters.provider.length) params.append('provider', filters.provider.join(','));\n      if (filters.status.length) params.append('status', filters.status.join(','));\n\n      const response = await api.get(`/api/summaries/history?${params}`);\n      setSummaries(response.data.summaries || response.data);\n      setTotalCount(response.data.total || response.data.length || 0);\n    } catch (error) {\n      toast.error('Failed to load summaries');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchSummaries();\n  }, [page, rowsPerPage, searchQuery, filters, sortBy, sortOrder]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterChange = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n    setPage(0);\n  };\n\n  const handleMenuOpen = (event, summary) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedSummary(summary);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedSummary(null);\n  };\n\n  const handleDelete = async () => {\n    if (!selectedSummary) return;\n    \n    try {\n      await api.delete(`/api/summaries/${selectedSummary.id}`);\n      toast.success('Summary deleted successfully');\n      fetchSummaries();\n    } catch (error) {\n      toast.error('Failed to delete summary');\n    }\n    handleMenuClose();\n  };\n\n  const handleShare = async () => {\n    if (!selectedSummary) return;\n    \n    try {\n      const response = await api.post(`/api/summaries/${selectedSummary.id}/share`);\n      const shareUrl = `${window.location.origin}/share/${response.data.data.shareToken}`;\n      await navigator.clipboard.writeText(shareUrl);\n      toast.success('Share link copied to clipboard!');\n    } catch (error) {\n      toast.error('Failed to generate share link');\n    }\n    handleMenuClose();\n  };\n\n  const handleDownload = async (summaryId) => {\n    try {\n      const response = await api.get(`/api/summaries/${summaryId}/download`, {\n        responseType: 'blob'\n      });\n      \n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `summary-${summaryId}.pdf`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      toast.error('Failed to download summary');\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'completed': return 'success';\n      case 'processing': return 'info';\n      case 'failed': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getProviderIcon = (provider) => {\n    switch (provider) {\n      case 'openai': return '🤖';\n      case 'gemini': return '✨';\n      default: return '📄';\n    }\n  };\n\n  if (loading && summaries.length === 0) {\n    return <Loading message=\"Loading summaries...\" />;\n  }\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\">\n          My Summaries\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<Description />}\n          onClick={() => navigate('/upload')}\n        >\n          New Summary\n        </Button>\n      </Box>\n\n      <Paper>\n        <Toolbar sx={{ pl: { sm: 2 }, pr: { xs: 1, sm: 1 } }}>\n          <TextField\n            variant=\"outlined\"\n            placeholder=\"Search summaries...\"\n            size=\"small\"\n            sx={{ flexGrow: 1, mr: 2 }}\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Search />\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <FormControl size=\"small\" sx={{ minWidth: 120, mr: 2 }}>\n            <InputLabel>Source Type</InputLabel>\n            <Select\n              multiple\n              value={filters.sourceType}\n              onChange={(e) => handleFilterChange('sourceType', e.target.value)}\n              input={<OutlinedInput label=\"Source Type\" />}\n              renderValue={(selected) => selected.join(', ')}\n              MenuProps={MenuProps}\n            >\n              {['file', 'url', 'text'].map((type) => (\n                <MenuItem key={type} value={type}>\n                  <Checkbox checked={filters.sourceType.indexOf(type) > -1} />\n                  <ListItemText primary={type.charAt(0).toUpperCase() + type.slice(1)} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl size=\"small\" sx={{ minWidth: 120, mr: 2 }}>\n            <InputLabel>Provider</InputLabel>\n            <Select\n              multiple\n              value={filters.provider}\n              onChange={(e) => handleFilterChange('provider', e.target.value)}\n              input={<OutlinedInput label=\"Provider\" />}\n              renderValue={(selected) => selected.join(', ')}\n              MenuProps={MenuProps}\n            >\n              {['openai', 'gemini'].map((provider) => (\n                <MenuItem key={provider} value={provider}>\n                  <Checkbox checked={filters.provider.indexOf(provider) > -1} />\n                  <ListItemText primary={provider === 'openai' ? 'OpenAI' : 'Gemini'} />\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <Tooltip title=\"Refresh\">\n            <IconButton onClick={fetchSummaries}>\n              <Refresh />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Title</TableCell>\n                <TableCell>Source</TableCell>\n                <TableCell>Provider</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Created</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {summaries.map((summary) => (\n                <TableRow\n                  key={summary.id}\n                  hover\n                  sx={{ cursor: 'pointer' }}\n                  onClick={() => navigate(`/summaries/${summary.id}`)}\n                >\n                  <TableCell>\n                    <Typography variant=\"body2\" fontWeight=\"medium\">\n                      {summary.title}\n                    </Typography>\n                    {summary.keyPoints && summary.keyPoints.length > 0 && (\n                      <Typography variant=\"caption\" color=\"text.secondary\">\n                        {summary.keyPoints.length} key points\n                      </Typography>\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      label={summary.sourceType}\n                      size=\"small\"\n                      variant=\"outlined\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box display=\"flex\" alignItems=\"center\" gap={0.5}>\n                      <Typography>{getProviderIcon(summary.provider)}</Typography>\n                      <Typography variant=\"body2\">\n                        {summary.provider === 'openai' ? 'OpenAI' : 'Gemini'}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      label={summary.status}\n                      color={getStatusColor(summary.status)}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    {format(new Date(summary.createdAt), 'MMM d, yyyy')}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1 }}>\n                      <Tooltip title=\"View\">\n                        <IconButton\n                          size=\"small\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            navigate(`/summaries/${summary.id}`);\n                          }}\n                        >\n                          <Visibility />\n                        </IconButton>\n                      </Tooltip>\n                      <Tooltip title=\"Download\">\n                        <IconButton\n                          size=\"small\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleDownload(summary.id);\n                          }}\n                        >\n                          <Download />\n                        </IconButton>\n                      </Tooltip>\n                      <IconButton\n                        size=\"small\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleMenuOpen(e, summary);\n                        }}\n                      >\n                        <MoreVert />\n                      </IconButton>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={totalCount}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleShare}>\n          <Share fontSize=\"small\" sx={{ mr: 1 }} />\n          Share\n        </MenuItem>\n        <MenuItem onClick={handleDelete}>\n          <Delete fontSize=\"small\" sx={{ mr: 1 }} />\n          Delete\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nexport default Summaries;"],"names":["MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","Summaries","summaries","setSummaries","useState","loading","setLoading","page","setPage","rowsPerPage","setRowsPerPage","totalCount","setTotalCount","searchQuery","setSearchQuery","filters","setFilters","sourceType","provider","status","sortBy","setSortBy","sortOrder","setSortOrder","anchorEl","setAnchorEl","selectedSummary","setSelectedSummary","navigate","useNavigate","fetchSummaries","async","params","URLSearchParams","limit","append","length","join","response","api","get","data","total","error","toast","useEffect","handleFilterChange","filterType","value","prev","handleMenuClose","getStatusColor","getProviderIcon","_jsx","Loading","message","_jsxs","Box","children","display","justifyContent","alignItems","mb","Typography","variant","Button","startIcon","Description","onClick","Paper","Toolbar","sx","pl","sm","pr","xs","TextField","placeholder","size","flexGrow","mr","onChange","e","target","InputProps","startAdornment","InputAdornment","position","Search","FormControl","minWidth","InputLabel","Select","multiple","input","OutlinedInput","label","renderValue","selected","map","type","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","charAt","toUpperCase","slice","Tooltip","title","IconButton","Refresh","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","summary","hover","cursor","id","fontWeight","keyPoints","color","Chip","gap","format","Date","createdAt","stopPropagation","Visibility","summaryId","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","handleDownload","Download","handleMenuOpen","event","currentTarget","MoreVert","TablePagination","rowsPerPageOptions","component","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","Menu","open","Boolean","onClose","post","shareUrl","location","origin","shareToken","navigator","clipboard","writeText","success","Share","fontSize","delete","Delete"],"sourceRoot":""}