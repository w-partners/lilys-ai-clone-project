{"version":3,"file":"static/js/122.d69fd8b8.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Add.js","pages/Profile.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/PlayArrow.js","pages/ApiKeyManager.js","../node_modules/@mui/icons-material/esm/ContentCopy.js","../node_modules/@mui/icons-material/esm/Error.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","import React from 'react';\nimport {\n  Container,\n  Paper,\n  Typography,\n  Box,\n  Grid,\n  Chip,\n  Alert\n} from '@mui/material';\nimport { Person as PersonIcon } from '@mui/icons-material';\nimport { useAuth } from '../contexts/AuthContext';\nimport ApiKeyManager from './ApiKeyManager';\n\nfunction Profile() {\n  const { user } = useAuth();\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" gutterBottom display=\"flex\" alignItems=\"center\">\n        <PersonIcon sx={{ mr: 2, fontSize: 40 }} />\n        Profile\n      </Typography>\n\n      {/* User Information */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          User Information\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Name\n            </Typography>\n            <Typography variant=\"body1\" fontWeight=\"medium\">\n              {user?.name || 'N/A'}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Phone\n            </Typography>\n            <Typography variant=\"body1\" fontWeight=\"medium\">\n              {user?.phone || 'N/A'}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Email\n            </Typography>\n            <Typography variant=\"body1\" fontWeight=\"medium\">\n              {user?.email || 'Not set'}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              Role\n            </Typography>\n            <Chip\n              label={user?.role || 'user'}\n              color={user?.role === 'admin' ? 'error' : 'primary'}\n              size=\"small\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {/* API Keys Section - Admin Only */}\n      {user?.role === 'admin' ? (\n        <ApiKeyManager />\n      ) : (\n        <Alert severity=\"info\">\n          API key management is only available for administrators.\n        </Alert>\n      )}\n    </Container>\n  );\n}\n\nexport default Profile;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7M2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2m4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3z\"\n}), 'VisibilityOff');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  Chip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Alert,\n  CircularProgress,\n  Tooltip,\n  Grid\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  ContentCopy as CopyIcon,\n  CheckCircle as CheckIcon,\n  Error as ErrorIcon,\n  PlayArrow as TestIcon,\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon\n} from '@mui/icons-material';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle responses\napi.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nfunction ApiKeyManager() {\n  const [keys, setKeys] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showKeys, setShowKeys] = useState({});\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingKey, setEditingKey] = useState(null);\n  const [formData, setFormData] = useState({\n    provider: 'gemini',\n    key: '',\n    name: ''\n  });\n  const [testingKey, setTestingKey] = useState(null);\n\n  // Fetch API keys\n  const fetchKeys = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/keys');\n      setKeys(response.data || []);\n    } catch (error) {\n      console.error('Failed to fetch keys:', error);\n      toast.error('Failed to load API keys');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchKeys();\n  }, []);\n\n  // Add/Update API key\n  const handleSave = async () => {\n    try {\n      if (!formData.key) {\n        toast.error('Please enter an API key');\n        return;\n      }\n\n      if (editingKey) {\n        // Update existing key\n        await api.put(`/keys/${editingKey.id}`, formData);\n        toast.success('API key updated successfully');\n      } else {\n        // Add new key\n        await api.post('/keys', formData);\n        toast.success('API key added successfully');\n      }\n\n      setOpenDialog(false);\n      setEditingKey(null);\n      setFormData({ provider: 'gemini', key: '', name: '' });\n      fetchKeys();\n    } catch (error) {\n      console.error('Failed to save key:', error);\n      toast.error(error.response?.data?.error || 'Failed to save API key');\n    }\n  };\n\n  // Delete API key\n  const handleDelete = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this API key?')) {\n      return;\n    }\n\n    try {\n      await api.delete(`/keys/${id}`);\n      toast.success('API key deleted successfully');\n      fetchKeys();\n    } catch (error) {\n      console.error('Failed to delete key:', error);\n      toast.error('Failed to delete API key');\n    }\n  };\n\n  // Test API key\n  const handleTest = async (key) => {\n    try {\n      setTestingKey(key.id);\n      const response = await api.post(`/keys/test/${key.id}`);\n      \n      if (response.data.status === 'connected') {\n        toast.success(response.data.message);\n      } else {\n        toast.error(response.data.message);\n      }\n    } catch (error) {\n      console.error('Failed to test key:', error);\n      toast.error('Failed to test API key');\n    } finally {\n      setTestingKey(null);\n    }\n  };\n\n  // Copy to clipboard\n  const copyToClipboard = (text) => {\n    navigator.clipboard.writeText(text);\n    toast.success('Copied to clipboard');\n  };\n\n  // Toggle show/hide key\n  const toggleShowKey = (keyId) => {\n    setShowKeys(prev => ({\n      ...prev,\n      [keyId]: !prev[keyId]\n    }));\n  };\n\n  // Open edit dialog\n  const openEditDialog = (key) => {\n    setEditingKey(key);\n    setFormData({\n      provider: key.provider,\n      key: key.fullKey || '',\n      name: key.name || ''\n    });\n    setOpenDialog(true);\n  };\n\n  // Open add dialog\n  const openAddDialog = () => {\n    setEditingKey(null);\n    setFormData({ provider: 'gemini', key: '', name: '' });\n    setOpenDialog(true);\n  };\n\n  const getProviderLabel = (provider) => {\n    switch (provider) {\n      case 'gemini':\n        return 'Google Gemini';\n      case 'openai':\n        return 'OpenAI';\n      default:\n        return provider;\n    }\n  };\n\n  const getStatusIcon = (key) => {\n    if (key.errorCount > 5) {\n      return <ErrorIcon color=\"error\" />;\n    }\n    if (key.usageCount > 0) {\n      return <CheckIcon color=\"success\" />;\n    }\n    return null;\n  };\n\n  return (\n    <Box>\n      <Paper sx={{ p: 3 }}>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n          <Typography variant=\"h6\">API Key Management</Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={openAddDialog}\n            color=\"primary\"\n          >\n            Add API Key\n          </Button>\n        </Box>\n\n        {loading ? (\n          <Box display=\"flex\" justifyContent=\"center\" py={4}>\n            <CircularProgress />\n          </Box>\n        ) : keys.length === 0 ? (\n          <Alert severity=\"info\">\n            No API keys configured. Click \"Add API Key\" to get started.\n          </Alert>\n        ) : (\n          <List>\n            {keys.map((key) => (\n              <ListItem\n                key={key.id}\n                sx={{\n                  mb: 2,\n                  bgcolor: 'background.paper',\n                  border: 1,\n                  borderColor: 'divider',\n                  borderRadius: 1\n                }}\n              >\n                <ListItemText\n                  primary={\n                    <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                      {getStatusIcon(key)}\n                      <Typography variant=\"subtitle1\" fontWeight=\"medium\">\n                        {key.name || `${getProviderLabel(key.provider)} Key`}\n                      </Typography>\n                      <Chip \n                        label={key.provider} \n                        size=\"small\" \n                        color={key.provider === 'gemini' ? 'primary' : 'secondary'}\n                      />\n                      {key.isActive && (\n                        <Chip label=\"Active\" size=\"small\" color=\"success\" />\n                      )}\n                    </Box>\n                  }\n                  secondary={\n                    <Box mt={1}>\n                      <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                          <Box display=\"flex\" alignItems=\"center\" gap={1}>\n                            <Typography \n                              variant=\"body2\" \n                              fontFamily=\"monospace\"\n                              sx={{ \n                                bgcolor: 'grey.100', \n                                p: 1, \n                                borderRadius: 1,\n                                flex: 1\n                              }}\n                            >\n                              {showKeys[key.id] ? key.fullKey : key.key}\n                            </Typography>\n                            <IconButton \n                              size=\"small\" \n                              onClick={() => toggleShowKey(key.id)}\n                            >\n                              {showKeys[key.id] ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                            </IconButton>\n                            <IconButton \n                              size=\"small\" \n                              onClick={() => copyToClipboard(key.fullKey)}\n                            >\n                              <CopyIcon />\n                            </IconButton>\n                          </Box>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Box display=\"flex\" gap={2} alignItems=\"center\">\n                            <Typography variant=\"caption\">\n                              Usage: {key.usageCount || 0}\n                            </Typography>\n                            {key.errorCount > 0 && (\n                              <Typography variant=\"caption\" color=\"error\">\n                                Errors: {key.errorCount}\n                              </Typography>\n                            )}\n                            {key.lastUsedAt && (\n                              <Typography variant=\"caption\" color=\"textSecondary\">\n                                Last used: {new Date(key.lastUsedAt).toLocaleString()}\n                              </Typography>\n                            )}\n                          </Box>\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <Box display=\"flex\" gap={1}>\n                    <Tooltip title=\"Test Connection\">\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => handleTest(key)}\n                        disabled={testingKey === key.id}\n                      >\n                        {testingKey === key.id ? (\n                          <CircularProgress size={20} />\n                        ) : (\n                          <TestIcon />\n                        )}\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Edit\">\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => openEditDialog(key)}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete\">\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => handleDelete(key.id)}\n                        color=\"error\"\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </Box>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </Paper>\n\n      {/* Add/Edit Dialog */}\n      <Dialog \n        open={openDialog} \n        onClose={() => setOpenDialog(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>\n          {editingKey ? 'Edit API Key' : 'Add New API Key'}\n        </DialogTitle>\n        <DialogContent>\n          <Box display=\"flex\" flexDirection=\"column\" gap={2} mt={1}>\n            <FormControl fullWidth>\n              <InputLabel>Provider</InputLabel>\n              <Select\n                value={formData.provider}\n                onChange={(e) => setFormData({ ...formData, provider: e.target.value })}\n                label=\"Provider\"\n              >\n                <MenuItem value=\"gemini\">Google Gemini</MenuItem>\n                <MenuItem value=\"openai\">OpenAI</MenuItem>\n              </Select>\n            </FormControl>\n\n            <TextField\n              fullWidth\n              label=\"API Key\"\n              value={formData.key}\n              onChange={(e) => setFormData({ ...formData, key: e.target.value })}\n              placeholder={`Enter your ${formData.provider === 'gemini' ? 'Gemini' : 'OpenAI'} API key`}\n              type=\"password\"\n              required\n            />\n\n            <TextField\n              fullWidth\n              label=\"Name (Optional)\"\n              value={formData.name}\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n              placeholder=\"e.g., Production Key, Test Key\"\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)}>\n            Cancel\n          </Button>\n          <Button \n            onClick={handleSave} \n            variant=\"contained\"\n            disabled={!formData.key}\n          >\n            {editingKey ? 'Update' : 'Add'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default ApiKeyManager;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-2h2zm0-4h-2V7h2z\"\n}), 'Error');"],"names":["createSvgIcon","_jsx","d","user","useAuth","_jsxs","Container","maxWidth","sx","py","children","Typography","variant","gutterBottom","display","alignItems","PersonIcon","mr","fontSize","Paper","p","mb","Grid","container","spacing","item","xs","sm","color","fontWeight","name","phone","email","Chip","label","role","size","ApiKeyManager","Alert","severity","api","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","data","error","_error$response","status","removeItem","window","location","href","Promise","reject","keys","setKeys","useState","loading","setLoading","showKeys","setShowKeys","openDialog","setOpenDialog","editingKey","setEditingKey","formData","setFormData","provider","key","testingKey","setTestingKey","fetchKeys","async","get","console","toast","useEffect","getProviderLabel","getStatusIcon","errorCount","ErrorIcon","usageCount","CheckIcon","Box","justifyContent","Button","startIcon","AddIcon","onClick","openAddDialog","CircularProgress","length","List","map","ListItem","bgcolor","border","borderColor","borderRadius","ListItemText","primary","gap","isActive","secondary","mt","fontFamily","flex","id","fullKey","IconButton","toggleShowKey","keyId","prev","VisibilityOffIcon","VisibilityIcon","copyToClipboard","text","navigator","clipboard","writeText","success","CopyIcon","lastUsedAt","Date","toLocaleString","ListItemSecondaryAction","Tooltip","title","post","message","handleTest","disabled","TestIcon","openEditDialog","EditIcon","confirm","delete","handleDelete","DeleteIcon","Dialog","open","onClose","fullWidth","DialogTitle","DialogContent","flexDirection","FormControl","InputLabel","Select","value","onChange","e","target","MenuItem","TextField","placeholder","type","required","DialogActions","put","_error$response2","_error$response2$data"],"sourceRoot":""}