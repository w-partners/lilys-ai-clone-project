{"version":3,"file":"static/js/479.16ff2c05.chunk.js","mappings":"ijBA+CA,MAAMA,EAAWC,IAAA,IAAC,MAAEC,EAAK,MAAEC,EAAK,KAAEC,EAAI,MAAEC,EAAQ,UAAS,MAAEC,GAAOL,EAAA,OAChEM,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,GAAI,CAAEC,EAAG,GAAIC,UAClBC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOC,WAAW,SAASC,eAAe,gBAAeL,SAAA,EACpEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAF,SAAA,EACFJ,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACZ,MAAM,iBAAiBa,QAAQ,QAAQC,cAAY,EAAAR,SAC5DT,KAEHK,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKE,WAAW,OAAMT,SACvCR,IAEFG,IACCM,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOC,WAAW,SAASM,GAAI,EAAEV,SAAA,EAC5CJ,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,SAAS,QAAQlB,MAAM,aACnCO,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,QAAQb,MAAM,eAAemB,GAAI,GAAIb,SAAA,CACtDL,EAAM,6BAKfC,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CACFJ,GAAI,CACFgB,gBAAiB,GAAGpB,UACpBqB,aAAc,EACdhB,EAAG,IACHI,QAAS,OACTC,WAAY,SACZC,eAAgB,UAChBL,SAEDP,UAMHuB,EAAoBC,IAA0B,IAAzB,QAAEC,EAAO,OAAEC,GAAQF,EA2B5C,OACEhB,EAAAA,EAAAA,MAACmB,EAAAA,EAAI,CAACtB,GAAI,CAAEuB,OAAQ,QAASrB,SAAA,EAC3BC,EAAAA,EAAAA,MAACqB,EAAAA,EAAW,CAAAtB,SAAA,EACVC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOE,eAAe,gBAAgBD,WAAW,QAAQmB,GAAI,EAAEvB,SAAA,EAC1EJ,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKiB,QAAM,EAAC1B,GAAI,CAAE2B,SAAU,OAAQzB,SACrDkB,EAAQ3B,SAEXK,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CACHC,MAzBcC,KACtB,OAAQA,GACN,IAAK,YAAa,MAAO,YACzB,IAAK,aAAc,MAAO,aAC1B,IAAK,SAAU,MAAO,SACtB,QAAS,OAAOA,IAoBHC,CAAeX,EAAQU,QAC9BlC,MAnCckC,KACtB,OAAQA,GACN,IAAK,YAAa,MAAO,UACzB,IAAK,aAAc,MAAO,OAC1B,IAAK,SAAU,MAAO,QACtB,QAAS,MAAO,YA8BHE,CAAeZ,EAAQU,QAC9BG,KAAK,QACLxB,QAAQ,eAIZX,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAQb,MAAM,iBAAiBsC,WAAS,EAAAhC,SACzDkB,EAAQe,SAAW,mBAGtBhC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAO+B,IAAK,EAAGC,SAAS,OAAMnC,SAAA,EACzCJ,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CACHjC,MAAMG,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAAAN,SA7BFoC,KACvB,OAAQA,GACN,IAAK,SAAU,MAAO,eACtB,IAAK,SAAU,MAAO,SACtB,QAAS,MAAO,iBAyBSC,CAAgBnB,EAAQkB,YAC3CT,MAAOT,EAAQkB,SACfL,KAAK,QACLxB,QAAQ,cAEVX,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CACHC,MAAOT,EAAQoB,WACfP,KAAK,QACLxB,QAAQ,cAEVX,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,UAAUb,MAAM,iBAAiBI,GAAI,CAAEe,GAAI,QAASb,UACrEuC,EAAAA,EAAAA,GAAoB,IAAIC,KAAKtB,EAAQuB,WAAY,CAAEC,WAAW,SAI/C,eAAnBxB,EAAQU,QAA2BV,EAAQyB,WAC1C1C,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACQ,GAAI,EAAEV,SAAA,EACTJ,EAAAA,EAAAA,KAACgD,EAAAA,EAAc,CAACrC,QAAQ,cAAcf,MAAO0B,EAAQyB,YACrD1C,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,UAAUb,MAAM,iBAAgBM,SAAA,CACjDkB,EAAQyB,SAAS,uBAM1B/C,EAAAA,EAAAA,KAACiD,EAAAA,EAAW,CAAA7C,UACVJ,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CACLf,KAAK,QACLgB,QAASA,IAAM5B,EAAOD,EAAQ8B,IAC9BC,SAA6B,cAAnB/B,EAAQU,OAClBsB,SAAStD,EAAAA,EAAAA,KAACuD,EAAAA,EAAY,IAAInD,SAC3B,uBAQT,SAASoD,EAAQC,GAAwC,IAAvC,SAAErD,EAAQ,MAAER,EAAK,MAAE8D,KAAUC,GAAOF,EACpD,OACEzD,EAAAA,EAAAA,KAAA,OACE4D,KAAK,WACLC,OAAQjE,IAAU8D,EAClBN,GAAI,sBAAsBM,IAC1B,kBAAiB,iBAAiBA,OAC9BC,EAAKvD,SAERR,IAAU8D,IACT1D,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACJ,GAAI,CAAE4D,GAAI,GAAI1D,SAChBA,KAKX,CAEA,MAujBA,EAvjBkB2D,KAChB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,CACjCG,eAAgB,EAChBC,SAAU,EACVC,eAAgB,EAChBC,YAAa,KAERC,EAAiBC,IAAsBR,EAAAA,EAAAA,UAAS,KAChDS,EAAYC,IAAiBV,EAAAA,EAAAA,WAAS,IAGtCW,EAAYC,IAAiBZ,EAAAA,EAAAA,UAAS,KACtCa,EAAQC,IAAad,EAAAA,EAAAA,UAAS,KAC9Be,EAAcC,IAAmBhB,EAAAA,EAAAA,UAAS,OAC1CiB,EAAWC,IAAgBlB,EAAAA,EAAAA,UAAS,IAGpCmB,GAAYC,KAAiBpB,EAAAA,EAAAA,WAAS,IACtCqB,GAAOC,KAAYtB,EAAAA,EAAAA,UAAS,OAC5BnB,GAAU0C,KAAevB,EAAAA,EAAAA,UAAS,IAClCwB,GAASC,KAAczB,EAAAA,EAAAA,UAAS,OAChC0B,GAAkBC,KAAuB3B,EAAAA,EAAAA,UAAS,IAClD4B,GAAOC,KAAY7B,EAAAA,EAAAA,UAAS,KAC5B8B,GAAQC,KAAa/B,EAAAA,EAAAA,UAAS,CAAC,IAEhC,KAAEgC,KAASC,EAAAA,EAAAA,MACX,OAAEC,KAAWC,EAAAA,EAAAA,KACbC,IAAWC,EAAAA,EAAAA,MAEXC,GAAgB,CACpB,4BACA,4BACA,2DACA,kCACA,mBACA,yCAGIC,GAAqBC,UACzB,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EACF,MAAOC,EAAUC,SAAsBC,QAAQC,IAAI,CACjDC,EAAAA,GAAIC,IAAI,oBACRD,EAAAA,GAAIC,IAAI,wBAIJC,GAAyB,QAAbV,EAAAI,EAASO,YAAI,IAAAX,OAAA,EAAbA,EAAeW,OAAQP,EAASO,MAAQ,CAAC,EAC3DlD,EAASiD,GAGT,MAGME,IAHiC,QAAjBX,EAAAI,EAAaM,YAAI,IAAAV,GAAM,QAANC,EAAjBD,EAAmBU,YAAI,IAAAT,OAAN,EAAjBA,EAAyBW,aAA8B,QAArBV,EAAIE,EAAaM,YAAI,IAAAR,OAAA,EAAjBA,EAAmBU,YAAa,IAGlDC,IAAInG,IAAY,IAADoG,EAAAC,EAAAC,EAAAC,EAEvD,MAAM7F,GAAoB,QAAX0F,EAAApG,EAAQwG,WAAG,IAAAJ,OAAA,EAAXA,EAAa1F,SAAU,YAChCe,GAAsB,QAAX4E,EAAArG,EAAQwG,WAAG,IAAAH,OAAA,EAAXA,EAAa5E,WAAY,IAG1C,IAAIV,EAAU,GACe,IAAD0F,EAAAC,EAAAC,EAA5B,GAAe,cAAXjG,EAEAK,EADEf,EAAQ4G,gBAAkB5G,EAAQ4G,eAAeC,OACzC7G,EAAQ4G,eAAeE,UAAU,EAAG,MACpC9G,EAAQ4G,eAAeG,OAAS,IAAM,MAAQ,IAC/B,QAApBN,EAAIzG,EAAQgH,gBAAQ,IAAAP,GAAS,QAATC,EAAhBD,EAAkBrC,eAAO,IAAAsC,GAAS,QAATC,EAAzBD,EAA2B1G,eAAO,IAAA2G,GAAlCA,EAAoCM,QAEnCjH,EAAQgH,SAAS5C,QAAQpE,QAAQiH,QAAQH,UAAU,EAAG,KAAO,MAE7D,yBAEP,GAAe,WAAXpG,EAAqB,CAAC,IAADwG,EAC9BnG,GAAqB,QAAXmG,EAAAlH,EAAQwG,WAAG,IAAAU,OAAA,EAAXA,EAAa1C,QAAS,mBAClC,MACEzD,EAAU,gBAIZ,MAAMK,EAAapB,EAAQoB,aACS,QAAjBkF,EAAAtG,EAAQmH,iBAAS,IAAAb,GAAjBA,EAAmBc,SAAS,gBAAmC,QAArBb,EAAIvG,EAAQmH,iBAAS,IAAAZ,GAAjBA,EAAmBa,SAAS,YAAc,UAAY,QAGjHlG,EAAWlB,EAAQkB,UAAY,SAErC,MAAO,IACFlB,EACHU,SACAe,WACAV,UACAK,aACAF,cAIJkC,EAAmB6C,EACrB,CAAE,MAAOzB,IACP6C,QAAQ7C,MAAM,kCAAmCA,IACjD8C,EAAAA,GAAM9C,MAAM,gCACd,CAAC,QACC7B,GAAW,GACXW,GAAc,EAChB,IAIFiE,EAAAA,EAAAA,WAAU,KACR,IAAKzC,KAAWb,GAAO,OAEvB,MAAMuD,EAAkBxB,IAClBA,EAAK/B,QAAUA,IACjBE,GAAY6B,EAAKvE,UAAY,IAI3BgG,EAAkBzB,IACtB,GAAIA,EAAK/B,QAAUA,GAAO,CAAC,IAADyD,EAAAC,EACxB3D,IAAc,GACdG,GAAY,KAEZ,MAAMyD,GAA8B,QAAXF,EAAA1B,EAAK6B,cAAM,IAAAH,OAAA,EAAXA,EAAaxB,YAAa,CACjD,CAAE7H,MAAO6G,GAAc,GAAI+B,SAAoB,QAAXU,EAAA3B,EAAK6B,cAAM,IAAAF,OAAA,EAAXA,EAAa3H,UAAWgG,EAAK6B,QACjE,CAAExJ,MAAO6G,GAAc,GAAI+B,QAAS,0BACpC,CAAE5I,MAAO6G,GAAc,GAAI+B,QAAS,0BACpC,CAAE5I,MAAO6G,GAAc,GAAI+B,QAAS,0BACpC,CAAE5I,MAAO6G,GAAc,GAAI+B,QAAS,0BACpC,CAAE5I,MAAO6G,GAAc,GAAI+B,QAAS,2BAGtC5C,GAAWuD,GACXN,EAAAA,GAAMQ,QAAQ,kEACd3C,IACF,GAGI4C,EAAe/B,IACfA,EAAK/B,QAAUA,KACjBD,IAAc,GACdS,GAASuB,EAAKxB,OAAS,gFACvB8C,EAAAA,GAAM9C,MAAM,kFAQhB,OAJAM,GAAOkD,GAAG,eAAgBR,GAC1B1C,GAAOkD,GAAG,eAAgBP,GAC1B3C,GAAOkD,GAAG,YAAaD,GAEhB,KACLjD,GAAOmD,IAAI,eAAgBT,GAC3B1C,GAAOmD,IAAI,eAAgBR,GAC3B3C,GAAOmD,IAAI,YAAaF,KAEzB,CAACjD,GAAQb,MAEZsD,EAAAA,EAAAA,WAAU,KACRpC,KAGA,MAAM+C,EAAWC,YAAYhD,GAAoB,KACjD,MAAO,IAAMiD,cAAcF,IAC1B,IAEH,MAKMG,GAAqBC,IACzBtD,GAAS,cAAcsD,MAiGnBC,GAAyBC,IAC7B,MAAMZ,EAAmBY,EAAStC,WAAa,CAC7C,CAAE7H,MAAO6G,GAAc,GAAI+B,QAASuB,EAASxI,SAC7C,CAAE3B,MAAO6G,GAAc,GAAI+B,QAAS,0BACpC,CAAE5I,MAAO6G,GAAc,GAAI+B,QAAS,0BACpC,CAAE5I,MAAO6G,GAAc,GAAI+B,QAAS,0BACpC,CAAE5I,MAAO6G,GAAc,GAAI+B,QAAS,0BACpC,CAAE5I,MAAO6G,GAAc,GAAI+B,QAAS,2BAEtC5C,GAAWuD,GACX5D,IAAc,GACdmB,MAaF,OAAIzC,GACKhE,EAAAA,EAAAA,KAAC+J,EAAAA,EAAO,CAACC,QAAQ,0BAIxB3J,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAF,SAAA,EAEFC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACqB,GAAI,EAAEvB,SAAA,EACTC,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAR,SAAA,CAAC,oCACxB,OAAJ8F,SAAI,IAAJA,QAAI,EAAJA,GAAM+D,QAAY,OAAJ/D,SAAI,IAAJA,QAAI,EAAJA,GAAMgE,OAAM,2BAEpClK,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAQb,MAAM,iBAAgBM,SAAC,6GAQrDC,EAAAA,EAAAA,MAAC8J,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG1I,GAAI,EAAEvB,SAAA,EAChCJ,EAAAA,EAAAA,KAACmK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAErK,UAC9BJ,EAAAA,EAAAA,KAACP,EAAQ,CACPE,MAAM,4BACNC,MAAOuE,EAAME,eACbxE,MAAMG,EAAAA,EAAAA,KAAC0K,EAAAA,EAAW,CAAC5K,MAAM,YACzBA,MAAM,eAIVE,EAAAA,EAAAA,KAACmK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAErK,UAC9BJ,EAAAA,EAAAA,KAACP,EAAQ,CACPE,MAAM,sBACNC,MAAOuE,EAAMG,SACbzE,MAAMG,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACjB,MAAM,YACxBA,MAAM,UACNC,MAAO,QAIXC,EAAAA,EAAAA,KAACmK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAErK,UAC9BJ,EAAAA,EAAAA,KAACP,EAAQ,CACPE,MAAM,wCACNC,MAAO,GAAGuE,EAAMI,uBAChB1E,MAAMG,EAAAA,EAAAA,KAAC2K,EAAAA,EAAK,CAAC7K,MAAM,SACnBA,MAAM,YAIVE,EAAAA,EAAAA,KAACmK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAErK,UAC9BJ,EAAAA,EAAAA,KAACP,EAAQ,CACPE,MAAM,qBACNC,MAAO,GAAGuE,EAAMK,eAChB3E,MAAMG,EAAAA,EAAAA,KAAC4K,EAAAA,EAAW,CAAC9K,MAAM,YACzBA,MAAM,kBAMZO,EAAAA,EAAAA,MAACJ,EAAAA,EAAK,CAACC,GAAI,CAAEC,EAAG,EAAGwB,GAAI,GAAIvB,SAAA,EACzBJ,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAR,SAAC,qCAItCC,EAAAA,EAAAA,MAACwK,EAAAA,EAAI,CAACjL,MAAOuF,EAAW2F,SAAUA,CAACC,EAAGC,IAAM5F,EAAa4F,GAAI9K,GAAI,CAAEyB,GAAI,GAAIvB,SAAA,EACzEJ,EAAAA,EAAAA,KAACiL,EAAAA,EAAG,CAACpL,MAAMG,EAAAA,EAAAA,KAACkL,EAAAA,EAAW,IAAKnJ,MAAM,aAClC/B,EAAAA,EAAAA,KAACiL,EAAAA,EAAG,CAACpL,MAAMG,EAAAA,EAAAA,KAACmL,EAAAA,EAAO,IAAKpJ,MAAM,8BAC9B/B,EAAAA,EAAAA,KAACiL,EAAAA,EAAG,CAACpL,MAAMG,EAAAA,EAAAA,KAACoL,EAAAA,EAAW,IAAKrJ,MAAM,uCAGnC+D,KACC9F,EAAAA,EAAAA,KAACqL,EAAAA,EAAK,CAACC,SAAS,QAAQpL,GAAI,CAAEyB,GAAI,GAAIvB,SACnC0F,KAIJT,KACChF,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACJ,GAAI,CAAEyB,GAAI,GAAIvB,SAAA,EACjBJ,EAAAA,EAAAA,KAACgD,EAAAA,EAAc,CAACrC,QAAQ,cAAcf,MAAOmD,MAC7C1C,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAACC,QAAQ,UAAUb,MAAM,iBAAgBM,SAAA,CAAC,0BAC1C2C,GAAS,WAKxB/C,EAAAA,EAAAA,KAACwD,EAAQ,CAAC5D,MAAOuF,EAAWzB,MAAO,EAAEtD,UACnCC,EAAAA,EAAAA,MAAA,QAAMkL,SA5Mc7E,UAE1B,GADAqE,EAAES,iBACG3G,EAAWsD,OAAhB,CAKApC,GAAS,IACTT,IAAc,GACdG,GAAY,GACZE,GAAW,MAEX,IACE,MAAMmE,QAAiB2B,EAAAA,GAAeC,WAAW7G,EAAY,UAEzDiF,EAASvE,OACXC,GAASsE,EAASvE,OAClBqD,EAAAA,GAAMQ,QAAQ,+DACLU,EAASxI,SAClBuI,GAAsBC,EAE1B,CAAE,MAAO6B,GAAM,IAADC,EAAAC,EACZlD,QAAQ7C,MAAM,SAAU6F,GACxB5F,IAAqB,QAAZ6F,EAAAD,EAAI7B,gBAAQ,IAAA8B,GAAM,QAANC,EAAZD,EAActE,YAAI,IAAAuE,OAAN,EAAZA,EAAoB/F,QAAS,+EACtCR,IAAc,EAChB,CApBA,MAFES,GAAS,2DAyM+B3F,SAAA,EAClCJ,EAAAA,EAAAA,KAAC8L,EAAAA,EAAS,CACRC,WAAS,EACThK,MAAM,cACNiK,YAAY,sCACZpM,MAAOiF,EACPiG,SAAWC,GAAMjG,EAAciG,EAAEkB,OAAOrM,OACxCyD,SAAUgC,GACV6G,WAAY,CACVC,gBACEnM,EAAAA,EAAAA,KAACoM,EAAAA,EAAc,CAACC,SAAS,QAAOjM,UAC9BJ,EAAAA,EAAAA,KAACkL,EAAAA,EAAW,CAACpL,MAAM,aAIzBI,GAAI,CAAEyB,GAAI,MAEZ3B,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CACLoJ,KAAK,SACL3L,QAAQ,YACRoL,WAAS,EACT1I,SAAUgC,KAAeR,EAAWsD,OACpCoE,UAAWlH,IAAarF,EAAAA,EAAAA,KAACwM,EAAAA,EAAgB,CAACrK,KAAM,MAASnC,EAAAA,EAAAA,KAACyM,EAAAA,EAAQ,IAAIrM,SAErEiF,GAAa,yBAAY,wDAKhCrF,EAAAA,EAAAA,KAACwD,EAAQ,CAAC5D,MAAOuF,EAAWzB,MAAO,EAAEtD,UACnCC,EAAAA,EAAAA,MAAA,QAAMkL,SA9MU7E,UAEtB,GADAqE,EAAES,iBACGzG,EAAOoD,OAAZ,CAKApC,GAAS,IACTT,IAAc,GACdG,GAAY,GACZE,GAAW,MAEX,IACE,MAAMmE,QAAiB2B,EAAAA,GAAeC,WAAW3G,EAAQ,UAErD+E,EAASvE,OACXC,GAASsE,EAASvE,OAClBqD,EAAAA,GAAMQ,QAAQ,wFACLU,EAASxI,SAClBuI,GAAsBC,EAE1B,CAAE,MAAO6B,GAAM,IAADe,EAAAC,EACZhE,QAAQ7C,MAAM,SAAU6F,GACxB5F,IAAqB,QAAZ2G,EAAAf,EAAI7B,gBAAQ,IAAA4C,GAAM,QAANC,EAAZD,EAAcpF,YAAI,IAAAqF,OAAN,EAAZA,EAAoB7G,QAAS,+EACtCR,IAAc,EAChB,CApBA,MAFES,GAAS,4EA2M2B3F,SAAA,EAC9BJ,EAAAA,EAAAA,KAAC8L,EAAAA,EAAS,CACRC,WAAS,EACThK,MAAM,+BACNiK,YAAY,8BACZpM,MAAOmF,EACP+F,SAAWC,GAAM/F,EAAU+F,EAAEkB,OAAOrM,OACpCyD,SAAUgC,GACV6G,WAAY,CACVC,gBACEnM,EAAAA,EAAAA,KAACoM,EAAAA,EAAc,CAACC,SAAS,QAAOjM,UAC9BJ,EAAAA,EAAAA,KAACmL,EAAAA,EAAO,CAACrL,MAAM,eAIrBI,GAAI,CAAEyB,GAAI,MAEZ3B,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CACLoJ,KAAK,SACL3L,QAAQ,YACRoL,WAAS,EACT1I,SAAUgC,KAAeN,EAAOoD,OAChCoE,UAAWlH,IAAarF,EAAAA,EAAAA,KAACwM,EAAAA,EAAgB,CAACrK,KAAM,MAASnC,EAAAA,EAAAA,KAACyM,EAAAA,EAAQ,IAAIrM,SAErEiF,GAAa,yBAAY,4DAKhCrF,EAAAA,EAAAA,KAACwD,EAAQ,CAAC5D,MAAOuF,EAAWzB,MAAO,EAAEtD,UACnCC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFJ,GAAI,CACF0M,OAAQ,aACRC,YAAa,UACb1L,aAAc,EACdhB,EAAG,EACH2M,UAAW,SACXC,OAAQ,UACR,UAAW,CACTF,YAAa,eACbG,QAAS,iBAGbC,UAAU,QAAO7M,SAAA,EAEjBJ,EAAAA,EAAAA,KAAA,SACEsM,KAAK,OACLzI,QAAM,EACNiH,SAlOapE,UACvB,MAAMwG,EAAOnC,EAAEkB,OAAOkB,MAAM,GAC5B,GAAKD,EAGL,GAAIA,EAAK/K,KAAO,SACd4D,GAAS,qGADX,CAKAb,EAAgBgI,GAChBnH,GAAS,IACTT,IAAc,GACdG,GAAY,GACZE,GAAW,MAEX,IACE,MAAMmE,QAAiB2B,EAAAA,GAAe2B,WACpCF,EACA,SACCG,IACC5H,GAAY4H,KAIZvD,EAASvE,OACXC,GAASsE,EAASvE,OAClBqD,EAAAA,GAAMQ,QAAQ,4EACLU,EAASxI,SAClBuI,GAAsBC,EAE1B,CAAE,MAAO6B,GAAM,IAAD2B,EAAAC,EACZ5E,QAAQ7C,MAAM,SAAU6F,GACxB5F,IAAqB,QAAZuH,EAAA3B,EAAI7B,gBAAQ,IAAAwD,GAAM,QAANC,EAAZD,EAAchG,YAAI,IAAAiG,OAAN,EAAZA,EAAoBzH,QAAS,kGACtCR,IAAc,EAChB,CA3BA,GA2NUkI,OAAO,iCACPnK,SAAUgC,MAEZrF,EAAAA,EAAAA,KAACoL,EAAAA,EAAW,CAAClL,GAAI,CAAEc,SAAU,GAAIlB,MAAO,iBAAkB6B,GAAI,MAC9D3B,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAR,SAAC,4FAGtCJ,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAQb,MAAM,iBAAgBM,SAAC,sDAGlD6E,IACCjF,EAAAA,EAAAA,KAAC8B,EAAAA,EAAI,CACHC,MAAOkD,EAAagF,KACpBwD,SAAUA,IAAMvI,EAAgB,MAChChF,GAAI,CAAEY,GAAI,aAQnB4E,KACCrF,EAAAA,EAAAA,MAACJ,EAAAA,EAAK,CAACC,GAAI,CAAEyB,GAAI,EAAGxB,EAAG,GAAIC,SAAA,EACzBJ,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAR,SAAC,+BAItCJ,EAAAA,EAAAA,KAAC6K,EAAAA,EAAI,CACHjL,MAAOgG,GACPkF,SAAUA,CAACC,EAAGC,IAAMnF,GAAoBmF,GACxCrK,QAAQ,aACR+M,cAAc,OACdxN,GAAI,CAAEyN,aAAc,EAAGd,YAAa,WAAYzM,SAE/CsF,GAAQ+B,IAAI,CAAC0B,EAAQzF,KACpB1D,EAAAA,EAAAA,KAACiL,EAAAA,EAAG,CAAalJ,MAAOoH,EAAOxJ,OAAS6G,GAAc9C,IAA5CA,MAIbgC,GAAQ+B,IAAI,CAAC0B,EAAQzF,KACpBrD,EAAAA,EAAAA,MAACmD,EAAQ,CAAa5D,MAAOgG,GAAkBlC,MAAOA,EAAMtD,SAAA,EAC1DC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACJ,GAAI,CAAEK,QAAS,OAAQE,eAAgB,gBAAiBkB,GAAI,GAAIvB,SAAA,EACnEJ,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKb,MAAM,UAASM,SACrC+I,EAAOxJ,OAAS6G,GAAc9C,MAEjC1D,EAAAA,EAAAA,KAAC4N,EAAAA,EAAO,CAACjO,MAAM,eAAIS,UACjBJ,EAAAA,EAAAA,KAAC6N,EAAAA,EAAU,CACT1K,QAASA,IA/NR2K,EAACvF,EAAS7E,KAC3BqK,UAAUC,UAAUC,UAAU1F,GAC9BtC,GAAU,IAAKD,GAAQ,CAACtC,IAAQ,IAChCkF,EAAAA,GAAMQ,QAAQ,6EAEd8E,WAAW,KACTjI,GAAU,IAAKD,GAAQ,CAACtC,IAAQ,KAC/B,MAwN4BoK,CAAW3E,EAAOZ,QAAS7E,GAC1CvB,KAAK,QAAO/B,SAEX4F,GAAOtC,IAAS1D,EAAAA,EAAAA,KAAC4K,EAAAA,EAAW,CAAC9K,MAAM,aAAeE,EAAAA,EAAAA,KAACmO,EAAAA,EAAQ,YAIlEnO,EAAAA,EAAAA,KAACoO,EAAAA,EAAO,CAAClO,GAAI,CAAEyB,GAAI,MACnB3B,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CACTC,QAAQ,QACRT,GAAI,CACFmO,WAAY,WACZC,WAAY,KACZlO,SAED+I,EAAOZ,YAtBG7E,QA8BrBrD,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAF,SAAA,EACFC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOE,eAAe,gBAAgBD,WAAW,SAASmB,GAAI,EAAEvB,SAAA,EAC3EJ,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAIP,SAAC,+BAGzBJ,EAAAA,EAAAA,KAAC4N,EAAAA,EAAO,CAACjO,MAAM,2BAAMS,UACnBJ,EAAAA,EAAAA,KAAC6N,EAAAA,EAAU,CAAC1K,QAjXAoL,KACpB3J,GAAc,GACd6B,MA+W4CpD,SAAUsB,EAAWvE,UACvDJ,EAAAA,EAAAA,KAACwO,EAAAA,EAAO,WAKc,IAA3B/J,EAAgB4D,QACfhI,EAAAA,EAAAA,MAACJ,EAAAA,EAAK,CAACC,GAAI,CAAEC,EAAG,EAAG2M,UAAW,UAAW1M,SAAA,EACvCJ,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,QAAQb,MAAM,iBAAiBsC,WAAS,EAAAhC,SAAC,mJAG7DJ,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CACLvC,QAAQ,YACRb,MAAM,QACNyM,WAAWvM,EAAAA,EAAAA,KAACyO,EAAAA,EAAU,IACtBtL,QAASA,IAAMmD,GAAS,KAAKlG,SAC9B,0CAKHJ,EAAAA,EAAAA,KAACmK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEjK,SACxBqE,EAAgBgD,IAAKnG,IACpBtB,EAAAA,EAAAA,KAACmK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAGiE,GAAI,EAAEtO,UAC9BJ,EAAAA,EAAAA,KAACoB,EAAiB,CAChBE,QAASA,EACTC,OAAQoI,MAH0BrI,EAAQ8B,a","sources":["pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Chip,\n  LinearProgress,\n  IconButton,\n  Tooltip,\n  Tab,\n  Tabs,\n  TextField,\n  InputAdornment,\n  Alert,\n  CircularProgress,\n  Divider\n} from '@mui/material';\nimport {\n  TrendingUp,\n  Description,\n  CloudUpload,\n  Timer,\n  CheckCircle,\n  Error as ErrorIcon,\n  Refresh,\n  ArrowForward,\n  Psychology,\n  Speed,\n  YouTube as YouTubeIcon,\n  Language as WebIcon,\n  Send as SendIcon,\n  ContentCopy as CopyIcon\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useWebSocket } from '../contexts/WebSocketContext';\nimport { formatDistanceToNow } from 'date-fns';\nimport { summaryService } from '../services/api';\nimport api from '../services/api';\nimport Loading from '../components/common/Loading';\nimport toast from 'react-hot-toast';\n\nconst StatCard = ({ title, value, icon, color = 'primary', trend }) => (\n  <Paper sx={{ p: 3 }}>\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n      <Box>\n        <Typography color=\"text.secondary\" variant=\"body2\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"h4\" fontWeight=\"bold\">\n          {value}\n        </Typography>\n        {trend && (\n          <Box display=\"flex\" alignItems=\"center\" mt={1}>\n            <TrendingUp fontSize=\"small\" color=\"success\" />\n            <Typography variant=\"body2\" color=\"success.main\" ml={0.5}>\n              {trend}% from last week\n            </Typography>\n          </Box>\n        )}\n      </Box>\n      <Box\n        sx={{\n          backgroundColor: `${color}.light`,\n          borderRadius: 2,\n          p: 1.5,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        {icon}\n      </Box>\n    </Box>\n  </Paper>\n);\n\nconst RecentSummaryCard = ({ summary, onView }) => {\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'completed': return 'success';\n      case 'processing': return 'info';\n      case 'failed': return 'error';\n      default: return 'default';\n    }\n  };\n  \n  const getStatusLabel = (status) => {\n    switch (status) {\n      case 'completed': return 'Completed';\n      case 'processing': return 'Processing';\n      case 'failed': return 'Failed';\n      default: return status;\n    }\n  };\n\n  const getProviderIcon = (provider) => {\n    switch (provider) {\n      case 'openai': return '🤖';\n      case 'gemini': return '✨';\n      default: return '📄';\n    }\n  };\n\n  return (\n    <Card sx={{ height: '100%' }}>\n      <CardContent>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"start\" mb={1}>\n          <Typography variant=\"h6\" noWrap sx={{ maxWidth: '70%' }}>\n            {summary.title}\n          </Typography>\n          <Chip\n            label={getStatusLabel(summary.status)}\n            color={getStatusColor(summary.status)}\n            size=\"small\"\n            variant=\"filled\"\n          />\n        </Box>\n        \n        <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n          {summary.preview || 'Processing...'}\n        </Typography>\n\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n          <Chip\n            icon={<Typography>{getProviderIcon(summary.provider)}</Typography>}\n            label={summary.provider}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n          <Chip\n            label={summary.sourceType}\n            size=\"small\"\n            variant=\"outlined\"\n          />\n          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 'auto' }}>\n            {formatDistanceToNow(new Date(summary.createdAt), { addSuffix: true })}\n          </Typography>\n        </Box>\n\n        {summary.status === 'processing' && summary.progress && (\n          <Box mt={2}>\n            <LinearProgress variant=\"determinate\" value={summary.progress} />\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {summary.progress}% complete\n            </Typography>\n          </Box>\n        )}\n      </CardContent>\n      \n      <CardActions>\n        <Button \n          size=\"small\" \n          onClick={() => onView(summary.id)}\n          disabled={summary.status !== 'completed'}\n          endIcon={<ArrowForward />}\n        >\n          View Summary\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nfunction TabPanel({ children, value, index, ...other }) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`dashboard-tabpanel-${index}`}\n      aria-labelledby={`dashboard-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ pt: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nconst Dashboard = () => {\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState({\n    totalSummaries: 0,\n    thisWeek: 0,\n    processingTime: 0,\n    successRate: 0\n  });\n  const [recentSummaries, setRecentSummaries] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  \n  // Input states\n  const [youtubeUrl, setYoutubeUrl] = useState('');\n  const [webUrl, setWebUrl] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [activeTab, setActiveTab] = useState(0);\n  \n  // Processing states\n  const [processing, setProcessing] = useState(false);\n  const [jobId, setJobId] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [results, setResults] = useState(null);\n  const [currentResultTab, setCurrentResultTab] = useState(0);\n  const [error, setError] = useState('');\n  const [copied, setCopied] = useState({});\n  \n  const { user } = useAuth();\n  const { socket } = useWebSocket();\n  const navigate = useNavigate();\n  \n  const systemPrompts = [\n    '핵심 요약',\n    '상세 분석',\n    '실행 가능한 인사이트',\n    '학습 포인트',\n    'Q&A 생성',\n    '비즈니스 적용'\n  ];\n\n  const fetchDashboardData = async () => {\n    try {\n      const [statsRes, summariesRes] = await Promise.all([\n        api.get('/summaries/stats'),\n        api.get('/summaries?limit=6')\n      ]);\n\n      // Handle API response structure properly\n      const statsData = statsRes.data?.data || statsRes.data || {};\n      setStats(statsData);\n      \n      // Extract summaries from response - check both data.data.summaries and data.summaries\n      const summariesData = summariesRes.data?.data?.summaries || summariesRes.data?.summaries || [];\n      \n      // Map job status to summary status for display - using same logic as History.js\n      const summariesWithStatus = summariesData.map(summary => {\n        // Simple logic: use job status if available, otherwise assume completed\n        const status = summary.job?.status || 'completed';\n        const progress = summary.job?.progress || 100;\n        \n        // Generate preview text\n        let preview = '';\n        if (status === 'completed') {\n          if (summary.summaryContent && summary.summaryContent.trim()) {\n            preview = summary.summaryContent.substring(0, 150) + \n                     (summary.summaryContent.length > 150 ? '...' : '');\n          } else if (summary.metadata?.results?.summary?.content) {\n            // For YouTube summaries with results in metadata\n            preview = summary.metadata.results.summary.content.substring(0, 150) + '...';\n          } else {\n            preview = 'Summary completed';\n          }\n        } else if (status === 'failed') {\n          preview = summary.job?.error || 'Processing failed';\n        } else {\n          preview = 'Processing...';\n        }\n        \n        // Ensure sourceType is set (default to youtube for YouTube URLs)\n        const sourceType = summary.sourceType || \n                          (summary.sourceUrl?.includes('youtube.com') || summary.sourceUrl?.includes('youtu.be') ? 'youtube' : 'text');\n        \n        // Ensure provider is set\n        const provider = summary.provider || 'gemini';\n        \n        return {\n          ...summary,\n          status,\n          progress,\n          preview,\n          sourceType,\n          provider\n        };\n      });\n      \n      setRecentSummaries(summariesWithStatus);\n    } catch (error) {\n      console.error('Failed to fetch dashboard data:', error);\n      toast.error('Failed to load dashboard data');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  // WebSocket 이벤트 리스너\n  useEffect(() => {\n    if (!socket || !jobId) return;\n\n    const handleProgress = (data) => {\n      if (data.jobId === jobId) {\n        setProgress(data.progress || 0);\n      }\n    };\n\n    const handleComplete = (data) => {\n      if (data.jobId === jobId) {\n        setProcessing(false);\n        setProgress(100);\n        \n        const formattedResults = data.result?.summaries || [\n          { title: systemPrompts[0], content: data.result?.summary || data.result },\n          { title: systemPrompts[1], content: '처리 중...' },\n          { title: systemPrompts[2], content: '처리 중...' },\n          { title: systemPrompts[3], content: '처리 중...' },\n          { title: systemPrompts[4], content: '처리 중...' },\n          { title: systemPrompts[5], content: '처리 중...' },\n        ];\n        \n        setResults(formattedResults);\n        toast.success('처리가 완료되었습니다!');\n        fetchDashboardData(); // Reload data\n      }\n    };\n\n    const handleError = (data) => {\n      if (data.jobId === jobId) {\n        setProcessing(false);\n        setError(data.error || '처리 중 오류가 발생했습니다.');\n        toast.error('처리 중 오류가 발생했습니다.');\n      }\n    };\n\n    socket.on('job:progress', handleProgress);\n    socket.on('job:complete', handleComplete);\n    socket.on('job:error', handleError);\n\n    return () => {\n      socket.off('job:progress', handleProgress);\n      socket.off('job:complete', handleComplete);\n      socket.off('job:error', handleError);\n    };\n  }, [socket, jobId]);\n\n  useEffect(() => {\n    fetchDashboardData();\n    \n    // Refresh every 30 seconds for live updates\n    const interval = setInterval(fetchDashboardData, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleRefresh = () => {\n    setRefreshing(true);\n    fetchDashboardData();\n  };\n\n  const handleViewSummary = (summaryId) => {\n    navigate(`/summaries/${summaryId}`);\n  };\n  \n  const handleYouTubeSubmit = async (e) => {\n    e.preventDefault();\n    if (!youtubeUrl.trim()) {\n      setError('YouTube URL을 입력해주세요');\n      return;\n    }\n\n    setError('');\n    setProcessing(true);\n    setProgress(0);\n    setResults(null);\n\n    try {\n      const response = await summaryService.processUrl(youtubeUrl, 'gemini');\n      \n      if (response.jobId) {\n        setJobId(response.jobId);\n        toast.success('처리를 시작했습니다...');\n      } else if (response.summary) {\n        handleImmediateResult(response);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError(err.response?.data?.error || '처리 중 오류가 발생했습니다');\n      setProcessing(false);\n    }\n  };\n\n  const handleWebSubmit = async (e) => {\n    e.preventDefault();\n    if (!webUrl.trim()) {\n      setError('웹페이지 URL을 입력해주세요');\n      return;\n    }\n\n    setError('');\n    setProcessing(true);\n    setProgress(0);\n    setResults(null);\n\n    try {\n      const response = await summaryService.processUrl(webUrl, 'gemini');\n      \n      if (response.jobId) {\n        setJobId(response.jobId);\n        toast.success('웹페이지 분석을 시작했습니다...');\n      } else if (response.summary) {\n        handleImmediateResult(response);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError(err.response?.data?.error || '처리 중 오류가 발생했습니다');\n      setProcessing(false);\n    }\n  };\n\n  const handleFileUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    // Check file size (50MB limit)\n    if (file.size > 50 * 1024 * 1024) {\n      setError('파일 크기는 50MB를 초과할 수 없습니다');\n      return;\n    }\n\n    setSelectedFile(file);\n    setError('');\n    setProcessing(true);\n    setProgress(0);\n    setResults(null);\n\n    try {\n      const response = await summaryService.uploadFile(\n        file,\n        'gemini',\n        (progressPercent) => {\n          setProgress(progressPercent);\n        }\n      );\n      \n      if (response.jobId) {\n        setJobId(response.jobId);\n        toast.success('파일 처리를 시작했습니다...');\n      } else if (response.summary) {\n        handleImmediateResult(response);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError(err.response?.data?.error || '파일 업로드 중 오류가 발생했습니다');\n      setProcessing(false);\n    }\n  };\n\n  const handleImmediateResult = (response) => {\n    const formattedResults = response.summaries || [\n      { title: systemPrompts[0], content: response.summary },\n      { title: systemPrompts[1], content: '처리 중...' },\n      { title: systemPrompts[2], content: '처리 중...' },\n      { title: systemPrompts[3], content: '처리 중...' },\n      { title: systemPrompts[4], content: '처리 중...' },\n      { title: systemPrompts[5], content: '처리 중...' },\n    ];\n    setResults(formattedResults);\n    setProcessing(false);\n    fetchDashboardData();\n  };\n\n  const handleCopy = (content, index) => {\n    navigator.clipboard.writeText(content);\n    setCopied({ ...copied, [index]: true });\n    toast.success('클립보드에 복사되었습니다');\n    \n    setTimeout(() => {\n      setCopied({ ...copied, [index]: false });\n    }, 2000);\n  };\n\n  if (loading) {\n    return <Loading message=\"Loading dashboard...\" />;\n  }\n\n  return (\n    <Box>\n      {/* Welcome Section */}\n      <Box mb={4}>\n        <Typography variant=\"h4\" gutterBottom>\n          안녕하세요, {user?.name || user?.phone}님! 👋\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          오늘은 어떤 콘텐츠를 요약해드릴까요?\n        </Typography>\n      </Box>\n\n      {/* API Usage Widget removed - not needed */}\n\n      {/* Stats Grid */}\n      <Grid container spacing={3} mb={4}>\n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"전체 요약\"\n            value={stats.totalSummaries}\n            icon={<Description color=\"primary\" />}\n            color=\"primary\"\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"이번 주\"\n            value={stats.thisWeek}\n            icon={<TrendingUp color=\"success\" />}\n            color=\"success\"\n            trend={12}\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"평균 처리시간\"\n            value={`${stats.processingTime}초`}\n            icon={<Speed color=\"info\" />}\n            color=\"info\"\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6} md={3}>\n          <StatCard\n            title=\"성공률\"\n            value={`${stats.successRate}%`}\n            icon={<CheckCircle color=\"success\" />}\n            color=\"success\"\n          />\n        </Grid>\n      </Grid>\n\n      {/* Input Section */}\n      <Paper sx={{ p: 3, mb: 4 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          콘텐츠 입력\n        </Typography>\n        \n        <Tabs value={activeTab} onChange={(e, v) => setActiveTab(v)} sx={{ mb: 3 }}>\n          <Tab icon={<YouTubeIcon />} label=\"YouTube\" />\n          <Tab icon={<WebIcon />} label=\"웹페이지\" />\n          <Tab icon={<CloudUpload />} label=\"파일 업로드\" />\n        </Tabs>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {processing && (\n          <Box sx={{ mb: 2 }}>\n            <LinearProgress variant=\"determinate\" value={progress} />\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              처리 중... {progress}%\n            </Typography>\n          </Box>\n        )}\n\n        <TabPanel value={activeTab} index={0}>\n          <form onSubmit={handleYouTubeSubmit}>\n            <TextField\n              fullWidth\n              label=\"YouTube URL\"\n              placeholder=\"https://www.youtube.com/watch?v=...\"\n              value={youtubeUrl}\n              onChange={(e) => setYoutubeUrl(e.target.value)}\n              disabled={processing}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <YouTubeIcon color=\"error\" />\n                  </InputAdornment>\n                ),\n              }}\n              sx={{ mb: 2 }}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              fullWidth\n              disabled={processing || !youtubeUrl.trim()}\n              startIcon={processing ? <CircularProgress size={20} /> : <SendIcon />}\n            >\n              {processing ? '처리 중...' : 'YouTube 영상 요약하기'}\n            </Button>\n          </form>\n        </TabPanel>\n\n        <TabPanel value={activeTab} index={1}>\n          <form onSubmit={handleWebSubmit}>\n            <TextField\n              fullWidth\n              label=\"웹페이지 URL\"\n              placeholder=\"https://example.com/article\"\n              value={webUrl}\n              onChange={(e) => setWebUrl(e.target.value)}\n              disabled={processing}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <WebIcon color=\"primary\" />\n                  </InputAdornment>\n                ),\n              }}\n              sx={{ mb: 2 }}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              fullWidth\n              disabled={processing || !webUrl.trim()}\n              startIcon={processing ? <CircularProgress size={20} /> : <SendIcon />}\n            >\n              {processing ? '처리 중...' : '웹페이지 요약하기'}\n            </Button>\n          </form>\n        </TabPanel>\n\n        <TabPanel value={activeTab} index={2}>\n          <Box\n            sx={{\n              border: '2px dashed',\n              borderColor: 'divider',\n              borderRadius: 2,\n              p: 4,\n              textAlign: 'center',\n              cursor: 'pointer',\n              '&:hover': {\n                borderColor: 'primary.main',\n                bgcolor: 'action.hover',\n              },\n            }}\n            component=\"label\"\n          >\n            <input\n              type=\"file\"\n              hidden\n              onChange={handleFileUpload}\n              accept=\".pdf,.docx,.txt,.mp3,.mp4,.wav\"\n              disabled={processing}\n            />\n            <CloudUpload sx={{ fontSize: 48, color: 'text.secondary', mb: 2 }} />\n            <Typography variant=\"h6\" gutterBottom>\n              파일을 선택하거나 드래그하세요\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              PDF, DOCX, TXT, MP3, MP4, WAV (최대 50MB)\n            </Typography>\n            {selectedFile && (\n              <Chip\n                label={selectedFile.name}\n                onDelete={() => setSelectedFile(null)}\n                sx={{ mt: 2 }}\n              />\n            )}\n          </Box>\n        </TabPanel>\n      </Paper>\n\n      {/* Results Section */}\n      {results && (\n        <Paper sx={{ mb: 4, p: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            요약 결과\n          </Typography>\n          \n          <Tabs\n            value={currentResultTab}\n            onChange={(e, v) => setCurrentResultTab(v)}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            sx={{ borderBottom: 1, borderColor: 'divider' }}\n          >\n            {results.map((result, index) => (\n              <Tab key={index} label={result.title || systemPrompts[index]} />\n            ))}\n          </Tabs>\n\n          {results.map((result, index) => (\n            <TabPanel key={index} value={currentResultTab} index={index}>\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\n                <Typography variant=\"h6\" color=\"primary\">\n                  {result.title || systemPrompts[index]}\n                </Typography>\n                <Tooltip title=\"복사\">\n                  <IconButton\n                    onClick={() => handleCopy(result.content, index)}\n                    size=\"small\"\n                  >\n                    {copied[index] ? <CheckCircle color=\"success\" /> : <CopyIcon />}\n                  </IconButton>\n                </Tooltip>\n              </Box>\n              <Divider sx={{ mb: 2 }} />\n              <Typography\n                variant=\"body1\"\n                sx={{\n                  whiteSpace: 'pre-wrap',\n                  lineHeight: 1.8,\n                }}\n              >\n                {result.content}\n              </Typography>\n            </TabPanel>\n          ))}\n        </Paper>\n      )}\n\n      {/* Recent Summaries */}\n      <Box>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n          <Typography variant=\"h6\">\n            최근 요약\n          </Typography>\n          <Tooltip title=\"새로고침\">\n            <IconButton onClick={handleRefresh} disabled={refreshing}>\n              <Refresh />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        \n        {recentSummaries.length === 0 ? (\n          <Paper sx={{ p: 4, textAlign: 'center' }}>\n            <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n              아직 요약이 없습니다. YouTube 링크를 입력하여 시작하세요!\n            </Typography>\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              startIcon={<Psychology />}\n              onClick={() => navigate('/')}\n            >\n              YouTube 요약 시작\n            </Button>\n          </Paper>\n        ) : (\n          <Grid container spacing={3}>\n            {recentSummaries.map((summary) => (\n              <Grid item xs={12} md={6} lg={4} key={summary.id}>\n                <RecentSummaryCard\n                  summary={summary}\n                  onView={handleViewSummary}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Dashboard;"],"names":["StatCard","_ref","title","value","icon","color","trend","_jsx","Paper","sx","p","children","_jsxs","Box","display","alignItems","justifyContent","Typography","variant","gutterBottom","fontWeight","mt","TrendingUp","fontSize","ml","backgroundColor","borderRadius","RecentSummaryCard","_ref2","summary","onView","Card","height","CardContent","mb","noWrap","maxWidth","Chip","label","status","getStatusLabel","getStatusColor","size","paragraph","preview","gap","flexWrap","provider","getProviderIcon","sourceType","formatDistanceToNow","Date","createdAt","addSuffix","progress","LinearProgress","CardActions","Button","onClick","id","disabled","endIcon","ArrowForward","TabPanel","_ref3","index","other","role","hidden","pt","Dashboard","loading","setLoading","useState","stats","setStats","totalSummaries","thisWeek","processingTime","successRate","recentSummaries","setRecentSummaries","refreshing","setRefreshing","youtubeUrl","setYoutubeUrl","webUrl","setWebUrl","selectedFile","setSelectedFile","activeTab","setActiveTab","processing","setProcessing","jobId","setJobId","setProgress","results","setResults","currentResultTab","setCurrentResultTab","error","setError","copied","setCopied","user","useAuth","socket","useWebSocket","navigate","useNavigate","systemPrompts","fetchDashboardData","async","_statsRes$data","_summariesRes$data","_summariesRes$data$da","_summariesRes$data2","statsRes","summariesRes","Promise","all","api","get","statsData","data","summariesWithStatus","summaries","map","_summary$job","_summary$job2","_summary$sourceUrl","_summary$sourceUrl2","job","_summary$metadata","_summary$metadata$res","_summary$metadata$res2","summaryContent","trim","substring","length","metadata","content","_summary$job3","sourceUrl","includes","console","toast","useEffect","handleProgress","handleComplete","_data$result","_data$result2","formattedResults","result","success","handleError","on","off","interval","setInterval","clearInterval","handleViewSummary","summaryId","handleImmediateResult","response","Loading","message","name","phone","Grid","container","spacing","item","xs","sm","md","Description","Speed","CheckCircle","Tabs","onChange","e","v","Tab","YouTubeIcon","WebIcon","CloudUpload","Alert","severity","onSubmit","preventDefault","summaryService","processUrl","err","_err$response","_err$response$data","TextField","fullWidth","placeholder","target","InputProps","startAdornment","InputAdornment","position","type","startIcon","CircularProgress","SendIcon","_err$response2","_err$response2$data","border","borderColor","textAlign","cursor","bgcolor","component","file","files","uploadFile","progressPercent","_err$response3","_err$response3$data","accept","onDelete","scrollButtons","borderBottom","Tooltip","IconButton","handleCopy","navigator","clipboard","writeText","setTimeout","CopyIcon","Divider","whiteSpace","lineHeight","handleRefresh","Refresh","Psychology","lg"],"sourceRoot":""}