{"version":3,"file":"static/js/518.e430d7a1.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Link.js","../node_modules/@mui/icons-material/esm/YouTube.js","../node_modules/@mui/icons-material/esm/FileDownload.js","pages/History.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1M8 13h8v-2H8zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5\"\n}), 'Link');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 15l5.19-3L10 9v6m11.56-7.83c.13.47.22 1.1.28 1.9.07.8.1 1.49.1 2.09L22 12c0 2.19-.16 3.8-.44 4.83-.25.9-.83 1.48-1.73 1.73-.47.13-1.33.22-2.65.28-1.3.07-2.49.1-3.59.1L12 19c-4.19 0-6.8-.16-7.83-.44-.9-.25-1.48-.83-1.73-1.73-.13-.47-.22-1.1-.28-1.9-.07-.8-.1-1.49-.1-2.09L2 12c0-2.19.16-3.8.44-4.83.25-.9.83-1.48 1.73-1.73.47-.13 1.33-.22 2.65-.28 1.3-.07 2.49-.1 3.59-.1L12 5c4.19 0 6.8.16 7.83.44.9.25 1.48.83 1.73 1.73z\"\n}), 'YouTube');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'FileDownload');","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Chip,\n  IconButton,\n  Tooltip,\n  TextField,\n  InputAdornment,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Button,\n  CircularProgress\n} from '@mui/material';\nimport {\n  Search as SearchIcon,\n  FilterList as FilterIcon,\n  Visibility as ViewIcon,\n  Delete as DeleteIcon,\n  Download as DownloadIcon,\n  FileDownload as FileIcon,\n  Link as LinkIcon,\n  Refresh as RefreshIcon,\n  YouTube as YouTubeIcon\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { format } from 'date-fns';\nimport toast from 'react-hot-toast';\nimport { useWebSocket } from '../contexts/WebSocketContext';\n\nconst History = () => {\n  const [summaries, setSummaries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [totalItems, setTotalItems] = useState(0);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('');\n  const [filterProvider, setFilterProvider] = useState('');\n  const [filterSourceType, setFilterSourceType] = useState('');\n  \n  const navigate = useNavigate();\n  const { socket } = useWebSocket();\n\n  const fetchSummaries = async () => {\n    try {\n      setLoading(true);\n      \n      const params = {\n        page: page + 1,\n        limit: rowsPerPage\n      };\n      \n      if (filterStatus) params.status = filterStatus;\n      if (filterProvider) params.provider = filterProvider;\n      if (filterSourceType) params.sourceType = filterSourceType;\n      \n      const response = await api.get('/summaries', { params });\n      \n      // Process summaries to include job status\n      const summariesWithStatus = (response.data.data?.summaries || response.data.summaries || []).map(summary => ({\n        ...summary,\n        status: summary.job?.status || 'completed',\n        progress: summary.job?.progress || 100\n      }));\n      \n      setSummaries(summariesWithStatus);\n      setTotalItems(response.data.data?.totalCount || response.data.totalCount || 0);\n    } catch (error) {\n      console.error('Failed to fetch summaries:', error);\n      toast.error('Failed to load summaries');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchSummaries();\n  }, [page, rowsPerPage, filterStatus, filterProvider, filterSourceType]);\n  \n  // Listen for job updates via WebSocket\n  useEffect(() => {\n    if (socket) {\n      const handleJobProgress = (data) => {\n        setSummaries(prev => prev.map(summary => \n          summary.jobId === data.jobId \n            ? { ...summary, status: 'processing', progress: data.progress }\n            : summary\n        ));\n      };\n      \n      const handleJobComplete = (data) => {\n        // Refresh the list when a job completes\n        fetchSummaries();\n      };\n      \n      const handleJobError = (data) => {\n        setSummaries(prev => prev.map(summary => \n          summary.jobId === data.jobId \n            ? { ...summary, status: 'failed' }\n            : summary\n        ));\n      };\n      \n      socket.on('job:progress', handleJobProgress);\n      socket.on('job:complete', handleJobComplete);\n      socket.on('job:error', handleJobError);\n      \n      return () => {\n        socket.off('job:progress', handleJobProgress);\n        socket.off('job:complete', handleJobComplete);\n        socket.off('job:error', handleJobError);\n      };\n    }\n  }, [socket]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleViewSummary = (summaryId) => {\n    navigate(`/summaries/${summaryId}`);\n  };\n\n  const handleDeleteSummary = async (summaryId) => {\n    if (!window.confirm('Are you sure you want to delete this summary?')) {\n      return;\n    }\n\n    try {\n      await api.delete(`/summaries/${summaryId}`);\n      toast.success('Summary deleted successfully');\n      fetchSummaries();\n    } catch (error) {\n      toast.error('Failed to delete summary');\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'completed':\n        return 'success';\n      case 'processing':\n        return 'warning';\n      case 'failed':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  const getSourceIcon = (sourceType) => {\n    if (sourceType === 'youtube') return <YouTubeIcon fontSize=\"small\" color=\"error\" />;\n    if (sourceType === 'file') return <FileIcon fontSize=\"small\" />;\n    return <LinkIcon fontSize=\"small\" />;\n  };\n\n  return (\n    <Box>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Box>\n          <Typography variant=\"h4\" gutterBottom fontWeight=\"bold\">\n            YouTube 요약 히스토리\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            YouTube 동영상 요약 기록을 확인하고 관리하세요\n          </Typography>\n        </Box>\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          startIcon={<YouTubeIcon />}\n          onClick={() => navigate('/')}\n        >\n          새 YouTube 요약\n        </Button>\n      </Box>\n\n      <Paper sx={{ p: 3 }}>\n        {/* Filters */}\n        <Box sx={{ display: 'flex', gap: 2, mb: 3, flexWrap: 'wrap' }}>\n          <TextField\n            placeholder=\"Search summaries...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            size=\"small\"\n            sx={{ flex: 1, minWidth: 250 }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n          \n          <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n            <InputLabel>Status</InputLabel>\n            <Select\n              value={filterStatus}\n              label=\"Status\"\n              onChange={(e) => setFilterStatus(e.target.value)}\n            >\n              <MenuItem value=\"\">All</MenuItem>\n              <MenuItem value=\"completed\">Completed</MenuItem>\n              <MenuItem value=\"processing\">Processing</MenuItem>\n              <MenuItem value=\"failed\">Failed</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n            <InputLabel>Provider</InputLabel>\n            <Select\n              value={filterProvider}\n              label=\"Provider\"\n              onChange={(e) => setFilterProvider(e.target.value)}\n            >\n              <MenuItem value=\"\">All</MenuItem>\n              <MenuItem value=\"gemini\">Gemini</MenuItem>\n              <MenuItem value=\"openai\">OpenAI</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n            <InputLabel>Source</InputLabel>\n            <Select\n              value={filterSourceType}\n              label=\"Source\"\n              onChange={(e) => setFilterSourceType(e.target.value)}\n            >\n              <MenuItem value=\"\">All</MenuItem>\n              <MenuItem value=\"youtube\">YouTube</MenuItem>\n              <MenuItem value=\"file\">File</MenuItem>\n              <MenuItem value=\"url\">URL</MenuItem>\n            </Select>\n          </FormControl>\n\n          <Tooltip title=\"Refresh\">\n            <IconButton onClick={fetchSummaries}>\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n\n        {/* Table */}\n        {loading ? (\n          <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\n            <CircularProgress />\n          </Box>\n        ) : summaries.length > 0 ? (\n          <>\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Title</TableCell>\n                    <TableCell>Source</TableCell>\n                    <TableCell>Provider</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell>Words</TableCell>\n                    <TableCell>Created</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {summaries.map((summary) => (\n                    <TableRow\n                      key={summary.id}\n                      hover\n                      sx={{ cursor: 'pointer' }}\n                      onClick={() => handleViewSummary(summary.id)}\n                    >\n                      <TableCell>\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                          {getSourceIcon(summary.sourceType)}\n                          <Typography variant=\"body2\" noWrap sx={{ maxWidth: 300 }}>\n                            {summary.title}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"caption\">\n                          {summary.sourceType === 'file' ? summary.fileName : 'URL'}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Chip\n                          label={summary.aiProvider}\n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {summary.status === 'processing' ? (\n                          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                            <CircularProgress size={16} />\n                            <Typography variant=\"caption\">\n                              {summary.progress}%\n                            </Typography>\n                          </Box>\n                        ) : (\n                          <Chip\n                            label={summary.status}\n                            size=\"small\"\n                            color={getStatusColor(summary.status)}\n                          />\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        {summary.wordCount || '-'}\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"caption\">\n                          {format(new Date(summary.createdAt), 'MMM d, yyyy')}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Box sx={{ display: 'flex', gap: 1 }}>\n                          <Tooltip title=\"View\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                handleViewSummary(summary.id);\n                              }}\n                            >\n                              <ViewIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Download\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                // TODO: Implement download\n                                toast.info('Download feature coming soon!');\n                              }}\n                            >\n                              <DownloadIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Delete\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                handleDeleteSummary(summary.id);\n                              }}\n                            >\n                              <DeleteIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, 50]}\n              component=\"div\"\n              count={totalItems}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </>\n        ) : (\n          <Box sx={{ textAlign: 'center', py: 8 }}>\n            <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n              요약 기록이 없습니다\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n              {filterStatus || filterProvider || filterSourceType\n                ? '필터를 조정해보세요'\n                : 'YouTube 링크를 입력하여 첫 요약을 시작하세요'}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              startIcon={<YouTubeIcon />}\n              onClick={() => navigate('/')}\n              sx={{ mt: 2 }}\n            >\n              YouTube 요약 시작\n            </Button>\n          </Box>\n        )}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default History;"],"names":["createSvgIcon","_jsx","d","History","summaries","setSummaries","useState","loading","setLoading","page","setPage","rowsPerPage","setRowsPerPage","totalItems","setTotalItems","searchTerm","setSearchTerm","filterStatus","setFilterStatus","filterProvider","setFilterProvider","filterSourceType","setFilterSourceType","navigate","useNavigate","socket","useWebSocket","fetchSummaries","async","_response$data$data","_response$data$data2","params","limit","status","provider","sourceType","response","api","get","summariesWithStatus","data","map","summary","_summary$job","_summary$job2","job","progress","totalCount","error","console","toast","useEffect","handleJobProgress","prev","jobId","handleJobComplete","handleJobError","on","off","handleViewSummary","summaryId","getStatusColor","_jsxs","Box","children","sx","display","justifyContent","alignItems","mb","Typography","variant","gutterBottom","fontWeight","color","Button","startIcon","YouTubeIcon","onClick","Paper","p","gap","flexWrap","TextField","placeholder","value","onChange","e","target","size","flex","minWidth","InputProps","startAdornment","InputAdornment","position","SearchIcon","FormControl","InputLabel","Select","label","MenuItem","Tooltip","title","IconButton","RefreshIcon","py","CircularProgress","length","_Fragment","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","hover","cursor","id","fontSize","FileIcon","LinkIcon","noWrap","maxWidth","fileName","Chip","aiProvider","wordCount","format","Date","createdAt","stopPropagation","ViewIcon","info","DownloadIcon","window","confirm","delete","success","handleDeleteSummary","DeleteIcon","TablePagination","rowsPerPageOptions","component","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","textAlign","paragraph","mt"],"sourceRoot":""}